-- | This module contains reexports of all the DOM elements.
-- This module has been automatically generated by running `spago run -p codegen`.
-- Any changes may be overwritten.
module Deku.DOM.SVG
  ( class TagToDeku
  , svg
  , svg_
  , svg__
  , g
  , g_
  , g__
  , defs
  , defs_
  , defs__
  , symbol
  , symbol_
  , symbol__
  , use
  , use_
  , use__
  , switch
  , switch_
  , switch__
  , title
  , title_
  , title__
  , desc
  , desc_
  , desc__
  , metadata
  , metadata_
  , metadata__
  , style
  , style_
  , style__
  , path
  , path_
  , path__
  , rect
  , rect_
  , rect__
  , circle
  , circle_
  , circle__
  , ellipse
  , ellipse_
  , ellipse__
  , line
  , line_
  , line__
  , polyline
  , polyline_
  , polyline__
  , polygon
  , polygon_
  , polygon__
  , text
  , text_
  , text__
  , tspan
  , tspan_
  , tspan__
  , textPath
  , textPath_
  , textPath__
  , image
  , image_
  , image__
  , foreignObject
  , foreignObject_
  , foreignObject__
  , marker
  , marker_
  , marker__
  , linearGradient
  , linearGradient_
  , linearGradient__
  , radialGradient
  , radialGradient_
  , radialGradient__
  , stop
  , stop_
  , stop__
  , pattern
  , pattern_
  , pattern__
  , script
  , script_
  , script__
  , a
  , a_
  , a__
  , view
  , view_
  , view__
  , animate
  , animate_
  , animate__
  , set
  , set_
  , set__
  , animateMotion
  , animateMotion_
  , animateMotion__
  , mpath
  , mpath_
  , mpath__
  , animateTransform
  , animateTransform_
  , animateTransform__
  , filter
  , filter_
  , filter__
  , feBlend
  , feBlend_
  , feBlend__
  , feColorMatrix
  , feColorMatrix_
  , feColorMatrix__
  , feComponentTransfer
  , feComponentTransfer_
  , feComponentTransfer__
  , feFuncR
  , feFuncR_
  , feFuncR__
  , feFuncG
  , feFuncG_
  , feFuncG__
  , feFuncB
  , feFuncB_
  , feFuncB__
  , feFuncA
  , feFuncA_
  , feFuncA__
  , feComposite
  , feComposite_
  , feComposite__
  , feConvolveMatrix
  , feConvolveMatrix_
  , feConvolveMatrix__
  , feDiffuseLighting
  , feDiffuseLighting_
  , feDiffuseLighting__
  , feDisplacementMap
  , feDisplacementMap_
  , feDisplacementMap__
  , feDropShadow
  , feDropShadow_
  , feDropShadow__
  , feFlood
  , feFlood_
  , feFlood__
  , feGaussianBlur
  , feGaussianBlur_
  , feGaussianBlur__
  , feImage
  , feImage_
  , feImage__
  , feMerge
  , feMerge_
  , feMerge__
  , feMergeNode
  , feMergeNode_
  , feMergeNode__
  , feMorphology
  , feMorphology_
  , feMorphology__
  , feOffset
  , feOffset_
  , feOffset__
  , feSpecularLighting
  , feSpecularLighting_
  , feSpecularLighting__
  , feTile
  , feTile_
  , feTile__
  , feTurbulence
  , feTurbulence_
  , feTurbulence__
  , feDistantLight
  , feDistantLight_
  , feDistantLight__
  , fePointLight
  , fePointLight_
  , fePointLight__
  , feSpotLight
  , feSpotLight_
  , feSpotLight__
  , clipPath
  , clipPath_
  , clipPath__
  , mask
  , mask_
  , mask__
  , SVGClipPathElement
  , SVGMaskElement
  , SVGFilterElement
  , SVGFilterPrimitiveStandardAttributes
  , SVGFEBlendElement
  , SVGFEColorMatrixElement
  , SVGFEComponentTransferElement
  , SVGComponentTransferFunctionElement
  , SVGFEFuncRElement
  , SVGFEFuncGElement
  , SVGFEFuncBElement
  , SVGFEFuncAElement
  , SVGFECompositeElement
  , SVGFEConvolveMatrixElement
  , SVGFEDiffuseLightingElement
  , SVGFEDistantLightElement
  , SVGFEPointLightElement
  , SVGFESpotLightElement
  , SVGFEDisplacementMapElement
  , SVGFEDropShadowElement
  , SVGFEFloodElement
  , SVGFEGaussianBlurElement
  , SVGFEImageElement
  , SVGFEMergeElement
  , SVGFEMergeNodeElement
  , SVGFEMorphologyElement
  , SVGFEOffsetElement
  , SVGFESpecularLightingElement
  , SVGFETileElement
  , SVGFETurbulenceElement
  , SVGAnimationElement
  , SVGAnimateElement
  , SVGSetElement
  , SVGAnimateMotionElement
  , SVGMPathElement
  , SVGAnimateTransformElement
  , SVGElement
  , SVGGraphicsElement
  , SVGGeometryElement
  , SVGTests
  , SVGFitToViewBox
  , SVGURIReference
  , SVGSVGElement
  , SVGGElement
  , SVGDefsElement
  , SVGDescElement
  , SVGMetadataElement
  , SVGTitleElement
  , SVGSymbolElement
  , SVGUseElement
  , SVGElementInstance
  , SVGSwitchElement
  , SVGStyleElement
  , SVGPathElement
  , SVGRectElement
  , SVGCircleElement
  , SVGEllipseElement
  , SVGLineElement
  , SVGAnimatedPoints
  , SVGPolylineElement
  , SVGPolygonElement
  , SVGTextContentElement
  , SVGTextPositioningElement
  , SVGTextElement
  , SVGTSpanElement
  , SVGTextPathElement
  , SVGImageElement
  , SVGForeignObjectElement
  , SVGMarkerElement
  , SVGGradientElement
  , SVGLinearGradientElement
  , SVGRadialGradientElement
  , SVGStopElement
  , SVGPatternElement
  , SVGScriptElement
  , SVGAElement
  , SVGViewElement
  , SvgText
  , SvgPresentation
  ) where

import FRP.Poll as FRP.Poll
import Data.Maybe (Maybe(..))
import Deku.Attribute (Attribute) as Deku.Attribute
import Deku.Control (elementify2)
import Deku.Control as DC
import Deku.Core (Nut)
import Type.Proxy (Proxy)
import Web.Event.Internal.Types as Web.Event.Internal.Types
import Deku.DOM (Element, GlobalEventHandlers, HTMLOrSVGElement, WindowEventHandlers)

class TagToDeku (tag :: Symbol) (interface :: Row Type) | tag -> interface
type SVGClipPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGClipPathElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  , clipPathUnits :: String
  | SVGElement r
  )

type SVGMaskElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMaskElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFilterElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFilterElement"
  , filterRes :: String
  , height :: String
  , width :: String
  , y :: String
  , x :: String
  , primitiveUnits :: String
  , filterUnits :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGFilterPrimitiveStandardAttributes (r :: Row Type) =
  (__tag :: Proxy "SVGFilterPrimitiveStandardAttributes" | SvgPresentation r)

type SVGFEBlendElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEBlendElement"
  , in2 :: String
  , noComposite :: String
  , mode :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEColorMatrixElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEColorMatrixElement"
  , values :: String
  , xtype :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEComponentTransferElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEComponentTransferElement"
  , offset :: String
  , exponent :: String
  , amplitude :: String
  , intercept :: String
  , slope :: String
  , tableValues :: String
  , xtype :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGComponentTransferFunctionElement (r :: Row Type) =
  (__tag :: Proxy "SVGComponentTransferFunctionElement" | SvgPresentation (SVGElement r))

type SVGFEFuncRElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncRElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncGElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncGElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncBElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncBElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncAElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncAElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFECompositeElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFECompositeElement"
  , in2 :: String
  , k4 :: String
  , k3 :: String
  , k2 :: String
  , k1 :: String
  , operator :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEConvolveMatrixElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEConvolveMatrixElement"
  , preserveAlpha :: String
  , kernelUnitLength :: String
  , edgeMode :: String
  , targetY :: String
  , targetX :: String
  , bias :: String
  , divisor :: String
  , kernelMatrix :: String
  , order :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDiffuseLightingElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDiffuseLightingElement"
  , kernelUnitLength :: String
  , diffuseConstant :: String
  , surfaceScale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDistantLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDistantLightElement"
  , elevation :: String
  , azimuth :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFEPointLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEPointLightElement"
  , z :: String
  , y :: String
  , x :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFESpotLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFESpotLightElement"
  , limitingConeAngle :: String
  , specularExponent :: String
  , pointsAtZ :: String
  , pointsAtY :: String
  , pointsAtX :: String
  , z :: String
  , y :: String
  , x :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFEDisplacementMapElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDisplacementMapElement"
  , in2 :: String
  , yChannelSelector :: String
  , xChannelSelector :: String
  , scale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDropShadowElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDropShadowElement"
  , stdDeviation :: String
  , dy :: String
  , dx :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEFloodElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEFloodElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEGaussianBlurElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEGaussianBlurElement"
  , edgeMode :: String
  , stdDeviation :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEImageElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEImageElement"
  , crossorigin :: String
  , preserveAspectRatio :: String
  , href :: String
  , xlinkHref :: String
  | SvgPresentation (SVGURIReference (SVGFilterPrimitiveStandardAttributes (SVGElement r)))
  )

type SVGFEMergeElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEMergeElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEMergeNodeElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEMergeNodeElement" | SvgPresentation (SVGElement r))

type SVGFEMorphologyElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEMorphologyElement"
  , radius :: String
  , operator :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEOffsetElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEOffsetElement"
  , dy :: String
  , dx :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFESpecularLightingElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFESpecularLightingElement"
  , kernelUnitLength :: String
  , specularExponent :: String
  , specularConstant :: String
  , surfaceScale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFETileElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFETileElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFETurbulenceElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFETurbulenceElement"
  , xtype :: String
  , stitchTiles :: String
  , seed :: String
  , numOctaves :: String
  , baseFrequency :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGAnimationElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimationElement"
  , repeat :: Web.Event.Internal.Types.Event
  , end :: Web.Event.Internal.Types.Event
  , begin :: Web.Event.Internal.Types.Event
  | SvgPresentation (SVGTests (SVGElement r))
  )

type SVGAnimateElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateElement"
  , origin :: String
  , rotate :: String
  , keyPoints :: String
  , accumulate :: String
  , additive :: String
  , from :: String
  , keySplines :: String
  , keyTimes :: String
  , values :: String
  , fill :: String
  , repeatDur :: String
  , repeatCount :: String
  , restart :: String
  , max :: String
  , min :: String
  , end :: String
  , dur :: String
  , begin :: String
  , attributeName :: String
  , href :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , by :: String
  | SVGAnimationElement r
  )

type SVGSetElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSetElement"
  , to :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimationElement r)
  )

type SVGAnimateMotionElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateMotionElement"
  , path :: String
  , calcMode :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SVGAnimateElement (SvgPresentation (SVGAnimationElement r))
  )

type SVGMPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMPathElement"
  , href :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGAnimateTransformElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateTransformElement"
  , xtype :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SVGAnimateElement (SvgPresentation (SVGAnimationElement r))
  )

type SVGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGElement"
  , lightingColor :: String
  , colorInterpolationFilters :: String
  , floodOpacity :: String
  , floodColor :: String
  , filter :: String
  , strokeOpacity :: String
  , stroke :: String
  , strokeRepeat :: String
  , strokeSize :: String
  , strokePosition :: String
  , strokeOrigin :: String
  , strokeImage :: String
  , strokeColor :: String
  , strokeDashJustify :: String
  , strokeDashCorner :: String
  , strokeDashoffset :: String
  , strokeDasharray :: String
  , strokeBreak :: String
  , strokeMiterlimit :: String
  , strokeLinejoin :: String
  , strokeLinecap :: String
  , strokeAlign :: String
  , strokeWidth :: String
  , fillOpacity :: String
  , fill :: String
  , fillRepeat :: String
  , fillSize :: String
  , fillPosition :: String
  , fillOrigin :: String
  , fillImage :: String
  , fillColor :: String
  , fillBreak :: String
  , fillRule :: String
  , pointerEvents :: String
  , imageRendering :: String
  , textRendering :: String
  , shapeRendering :: String
  , colorInterpolation :: String
  , paintOrder :: String
  , marker :: String
  , markerEnd :: String
  , markerMid :: String
  , markerStart :: String
  , textAnchor :: String
  , shapeMargin :: String
  , shapeSubtract :: String
  , shapeInside :: String
  , inlineSize :: String
  , d :: String
  , vectorEffect :: String
  , y :: String
  , x :: String
  , ry :: String
  , rx :: String
  , r :: String
  , cy :: String
  , cx :: String
  | SvgPresentation (HTMLOrSVGElement (SVGElementInstance (GlobalEventHandlers (Element r))))
  )

type SVGGraphicsElement (r :: Row Type) =
  (__tag :: Proxy "SVGGraphicsElement" | SvgPresentation (SVGTests (SVGElement r)))

type SVGGeometryElement (r :: Row Type) =
  (__tag :: Proxy "SVGGeometryElement" | SvgPresentation (SVGGraphicsElement r))

type SVGTests (r :: Row Type) = (__tag :: Proxy "SVGTests" | SvgPresentation r)
type SVGFitToViewBox (r :: Row Type) = (__tag :: Proxy "SVGFitToViewBox" | SvgPresentation r)
type SVGURIReference (r :: Row Type) = (__tag :: Proxy "SVGURIReference" | SvgPresentation r)
type SVGSVGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSVGElement"
  , preserveAspectRatio :: String
  , viewBox :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , height :: String
  , width :: String
  | SvgPresentation (WindowEventHandlers (SVGFitToViewBox (SVGGraphicsElement r)))
  )

type SVGGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGGElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGDefsElement (r :: Row Type) =
  (__tag :: Proxy "SVGDefsElement" | SvgPresentation (SVGGraphicsElement r))

type SVGDescElement (r :: Row Type) =
  (__tag :: Proxy "SVGDescElement" | SvgPresentation (SVGElement r))

type SVGMetadataElement (r :: Row Type) =
  (__tag :: Proxy "SVGMetadataElement" | SvgPresentation (SVGElement r))

type SVGTitleElement (r :: Row Type) =
  (__tag :: Proxy "SVGTitleElement" | SvgPresentation (SVGElement r))

type SVGSymbolElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSymbolElement"
  , refY :: String
  , refX :: String
  | SvgPresentation (SVGFitToViewBox (SVGGraphicsElement r))
  )

type SVGUseElement (r :: Row Type) =
  ( __tag :: Proxy "SVGUseElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , href :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGElementInstance (r :: Row Type) = (__tag :: Proxy "SVGElementInstance" | SvgPresentation r)
type SVGSwitchElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSwitchElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGStyleElement (r :: Row Type) =
  ( __tag :: Proxy "SVGStyleElement"
  , title :: String
  , media :: String
  , xtype :: String
  | SvgPresentation (SVGElement r)
  )

type SVGPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPathElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGRectElement (r :: Row Type) =
  ( __tag :: Proxy "SVGRectElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGCircleElement (r :: Row Type) =
  ( __tag :: Proxy "SVGCircleElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGEllipseElement (r :: Row Type) =
  ( __tag :: Proxy "SVGEllipseElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGLineElement (r :: Row Type) =
  ( __tag :: Proxy "SVGLineElement"
  , y2 :: String
  , x2 :: String
  , y1 :: String
  , x1 :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGAnimatedPoints (r :: Row Type) =
  (__tag :: Proxy "SVGAnimatedPoints" | SVGAnimateElement (SvgPresentation r))

type SVGPolylineElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPolylineElement"
  , points :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimatedPoints (SVGGeometryElement r))
  )

type SVGPolygonElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPolygonElement"
  , points :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimatedPoints (SVGGeometryElement r))
  )

type SVGTextContentElement (r :: Row Type) =
  (__tag :: Proxy "SVGTextContentElement" | SvgPresentation (SVGGraphicsElement r))

type SVGTextPositioningElement (r :: Row Type) =
  (__tag :: Proxy "SVGTextPositioningElement" | SvgPresentation (SVGTextContentElement r))

type SVGTextElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTextElement"
  , lengthAdjust :: String
  , textLength :: String
  , rotate :: String
  , dy :: String
  , dx :: String
  , y :: String
  , x :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SvgText (SVGTextPositioningElement r))
  )

type SVGTSpanElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTSpanElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGTextPositioningElement r)
  )

type SVGTextPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTextPathElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , path :: String
  , side :: String
  , spacing :: String
  , method :: String
  , startOffset :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SvgText (SVGURIReference (SVGTextContentElement r)))
  )

type SVGImageElement (r :: Row Type) =
  ( __tag :: Proxy "SVGImageElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , crossorigin :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGForeignObjectElement (r :: Row Type) =
  ( __tag :: Proxy "SVGForeignObjectElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGMarkerElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMarkerElement"
  , orient :: String
  , refY :: String
  , refX :: String
  , markerHeight :: String
  , markerWidth :: String
  , markerUnits :: String
  | SvgPresentation (SVGFitToViewBox (SVGElement r))
  )

type SVGGradientElement (r :: Row Type) =
  (__tag :: Proxy "SVGGradientElement" | SvgPresentation (SVGURIReference (SVGElement r)))

type SVGLinearGradientElement (r :: Row Type) =
  ( __tag :: Proxy "SVGLinearGradientElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , spreadMethod :: String
  , y2 :: String
  , x2 :: String
  , y1 :: String
  , x1 :: String
  , gradientTransform :: String
  , gradientUnits :: String
  | SvgPresentation (SVGGradientElement r)
  )

type SVGRadialGradientElement (r :: Row Type) =
  ( __tag :: Proxy "SVGRadialGradientElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , spreadMethod :: String
  , fr :: String
  , fy :: String
  , fx :: String
  , r :: String
  , cy :: String
  , cx :: String
  , gradientTransform :: String
  , gradientUnits :: String
  | SvgPresentation (SVGGradientElement r)
  )

type SVGStopElement (r :: Row Type) =
  ( __tag :: Proxy "SVGStopElement"
  , stopOpacity :: String
  , stopColor :: String
  , offset :: String
  | SvgPresentation (SVGElement r)
  )

type SVGPatternElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPatternElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , height :: String
  , width :: String
  , y :: String
  , x :: String
  , patternTransform :: String
  , patternContentUnits :: String
  , patternUnits :: String
  | SvgPresentation (SVGURIReference (SVGFitToViewBox (SVGElement r)))
  )

type SVGScriptElement (r :: Row Type) =
  ( __tag :: Proxy "SVGScriptElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , xtype :: String
  , crossorigin :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGAElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAElement"
  , referrerpolicy :: String
  , xtype :: String
  , hreflang :: String
  , rel :: String
  , ping :: String
  , download :: String
  , target :: String
  , href :: String
  , xlinkTitle :: String
  , xlinkHref :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGViewElement (r :: Row Type) =
  (__tag :: Proxy "SVGViewElement" | SvgPresentation (SVGFitToViewBox (SVGElement r)))

type SvgText (r :: Row Type) =
  ( __tag :: Proxy "SvgText"
  , alignmentBaseline :: String
  , baselineShift :: String
  , dominantBaseline :: String
  , fontFamily :: String
  , fontSize :: String
  , fontSizeAdjust :: String
  , fontStretch :: String
  , fontStyle :: String
  , fontVariant :: String
  , fontWeight :: String
  , letterSpacing :: String
  , textDecoration :: String
  , wordSpacing :: String
  , writingMode :: String
  , unicodeBidi :: String
  | r
  )

type SvgPresentation (r :: Row Type) =
  ( __tag :: Proxy "SvgPresentation"
  , pathLength :: String
  , mask :: String
  , opacity :: String
  , overflow :: String
  , clipPath :: String
  , clipRule :: String
  , cursor :: String
  , display :: String
  , transform :: String
  , transformOrigin :: String
  , visibility :: String
  | r
  )

instance TagToDeku "svg" (SVGSVGElement ())

svg :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGSVGElement ()))) -> Array Nut -> Nut
svg = elementify2 (Just "http://www.w3.org/2000/svg") "svg"

svg_ :: Array Nut -> Nut
svg_ = svg []

svg__ :: String -> Nut
svg__ t = svg [] [ DC.text_ t ]

instance TagToDeku "g" (SVGGElement ())

g :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGGElement ()))) -> Array Nut -> Nut
g = elementify2 (Just "http://www.w3.org/2000/svg") "g"

g_ :: Array Nut -> Nut
g_ = g []

g__ :: String -> Nut
g__ t = g [] [ DC.text_ t ]

instance TagToDeku "defs" (SVGDefsElement ())

defs :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGDefsElement ()))) -> Array Nut -> Nut
defs = elementify2 (Just "http://www.w3.org/2000/svg") "defs"

defs_ :: Array Nut -> Nut
defs_ = defs []

defs__ :: String -> Nut
defs__ t = defs [] [ DC.text_ t ]

instance TagToDeku "symbol" (SVGSymbolElement ())

symbol
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGSymbolElement ()))) -> Array Nut -> Nut
symbol = elementify2 (Just "http://www.w3.org/2000/svg") "symbol"

symbol_ :: Array Nut -> Nut
symbol_ = symbol []

symbol__ :: String -> Nut
symbol__ t = symbol [] [ DC.text_ t ]

instance TagToDeku "use" (SVGUseElement ())

use :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGUseElement ()))) -> Array Nut -> Nut
use = elementify2 (Just "http://www.w3.org/2000/svg") "use"

use_ :: Array Nut -> Nut
use_ = use []

use__ :: String -> Nut
use__ t = use [] [ DC.text_ t ]

instance TagToDeku "switch" (SVGSwitchElement ())

switch
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGSwitchElement ()))) -> Array Nut -> Nut
switch = elementify2 (Just "http://www.w3.org/2000/svg") "switch"

switch_ :: Array Nut -> Nut
switch_ = switch []

switch__ :: String -> Nut
switch__ t = switch [] [ DC.text_ t ]

instance TagToDeku "title" (SVGTitleElement ())

title :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGTitleElement ()))) -> Array Nut -> Nut
title = elementify2 (Just "http://www.w3.org/2000/svg") "title"

title_ :: Array Nut -> Nut
title_ = title []

title__ :: String -> Nut
title__ t = title [] [ DC.text_ t ]

instance TagToDeku "desc" (SVGDescElement ())

desc :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGDescElement ()))) -> Array Nut -> Nut
desc = elementify2 (Just "http://www.w3.org/2000/svg") "desc"

desc_ :: Array Nut -> Nut
desc_ = desc []

desc__ :: String -> Nut
desc__ t = desc [] [ DC.text_ t ]

instance TagToDeku "metadata" (SVGMetadataElement ())

metadata
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGMetadataElement ()))) -> Array Nut -> Nut
metadata = elementify2 (Just "http://www.w3.org/2000/svg") "metadata"

metadata_ :: Array Nut -> Nut
metadata_ = metadata []

metadata__ :: String -> Nut
metadata__ t = metadata [] [ DC.text_ t ]

instance TagToDeku "style" (SVGStyleElement ())

style :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGStyleElement ()))) -> Array Nut -> Nut
style = elementify2 (Just "http://www.w3.org/2000/svg") "style"

style_ :: Array Nut -> Nut
style_ = style []

style__ :: String -> Nut
style__ t = style [] [ DC.text_ t ]

instance TagToDeku "path" (SVGPathElement ())

path :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGPathElement ()))) -> Array Nut -> Nut
path = elementify2 (Just "http://www.w3.org/2000/svg") "path"

path_ :: Array Nut -> Nut
path_ = path []

path__ :: String -> Nut
path__ t = path [] [ DC.text_ t ]

instance TagToDeku "rect" (SVGRectElement ())

rect :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGRectElement ()))) -> Array Nut -> Nut
rect = elementify2 (Just "http://www.w3.org/2000/svg") "rect"

rect_ :: Array Nut -> Nut
rect_ = rect []

rect__ :: String -> Nut
rect__ t = rect [] [ DC.text_ t ]

instance TagToDeku "circle" (SVGCircleElement ())

circle
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGCircleElement ()))) -> Array Nut -> Nut
circle = elementify2 (Just "http://www.w3.org/2000/svg") "circle"

circle_ :: Array Nut -> Nut
circle_ = circle []

circle__ :: String -> Nut
circle__ t = circle [] [ DC.text_ t ]

instance TagToDeku "ellipse" (SVGEllipseElement ())

ellipse
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGEllipseElement ()))) -> Array Nut -> Nut
ellipse = elementify2 (Just "http://www.w3.org/2000/svg") "ellipse"

ellipse_ :: Array Nut -> Nut
ellipse_ = ellipse []

ellipse__ :: String -> Nut
ellipse__ t = ellipse [] [ DC.text_ t ]

instance TagToDeku "line" (SVGLineElement ())

line :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGLineElement ()))) -> Array Nut -> Nut
line = elementify2 (Just "http://www.w3.org/2000/svg") "line"

line_ :: Array Nut -> Nut
line_ = line []

line__ :: String -> Nut
line__ t = line [] [ DC.text_ t ]

instance TagToDeku "polyline" (SVGPolylineElement ())

polyline
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGPolylineElement ()))) -> Array Nut -> Nut
polyline = elementify2 (Just "http://www.w3.org/2000/svg") "polyline"

polyline_ :: Array Nut -> Nut
polyline_ = polyline []

polyline__ :: String -> Nut
polyline__ t = polyline [] [ DC.text_ t ]

instance TagToDeku "polygon" (SVGPolygonElement ())

polygon
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGPolygonElement ()))) -> Array Nut -> Nut
polygon = elementify2 (Just "http://www.w3.org/2000/svg") "polygon"

polygon_ :: Array Nut -> Nut
polygon_ = polygon []

polygon__ :: String -> Nut
polygon__ t = polygon [] [ DC.text_ t ]

instance TagToDeku "text" (SVGTextElement ())

text :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGTextElement ()))) -> Array Nut -> Nut
text = elementify2 (Just "http://www.w3.org/2000/svg") "text"

text_ :: Array Nut -> Nut
text_ = text []

text__ :: String -> Nut
text__ t = text [] [ DC.text_ t ]

instance TagToDeku "tspan" (SVGTSpanElement ())

tspan :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGTSpanElement ()))) -> Array Nut -> Nut
tspan = elementify2 (Just "http://www.w3.org/2000/svg") "tspan"

tspan_ :: Array Nut -> Nut
tspan_ = tspan []

tspan__ :: String -> Nut
tspan__ t = tspan [] [ DC.text_ t ]

instance TagToDeku "textPath" (SVGTextPathElement ())

textPath
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGTextPathElement ()))) -> Array Nut -> Nut
textPath = elementify2 (Just "http://www.w3.org/2000/svg") "textPath"

textPath_ :: Array Nut -> Nut
textPath_ = textPath []

textPath__ :: String -> Nut
textPath__ t = textPath [] [ DC.text_ t ]

instance TagToDeku "image" (SVGImageElement ())

image :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGImageElement ()))) -> Array Nut -> Nut
image = elementify2 (Just "http://www.w3.org/2000/svg") "image"

image_ :: Array Nut -> Nut
image_ = image []

image__ :: String -> Nut
image__ t = image [] [ DC.text_ t ]

instance TagToDeku "foreignObject" (SVGForeignObjectElement ())

foreignObject
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGForeignObjectElement ())))
  -> Array Nut
  -> Nut
foreignObject = elementify2 (Just "http://www.w3.org/2000/svg") "foreignObject"

foreignObject_ :: Array Nut -> Nut
foreignObject_ = foreignObject []

foreignObject__ :: String -> Nut
foreignObject__ t = foreignObject [] [ DC.text_ t ]

instance TagToDeku "marker" (SVGMarkerElement ())

marker
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGMarkerElement ()))) -> Array Nut -> Nut
marker = elementify2 (Just "http://www.w3.org/2000/svg") "marker"

marker_ :: Array Nut -> Nut
marker_ = marker []

marker__ :: String -> Nut
marker__ t = marker [] [ DC.text_ t ]

instance TagToDeku "linearGradient" (SVGLinearGradientElement ())

linearGradient
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGLinearGradientElement ())))
  -> Array Nut
  -> Nut
linearGradient = elementify2 (Just "http://www.w3.org/2000/svg") "linearGradient"

linearGradient_ :: Array Nut -> Nut
linearGradient_ = linearGradient []

linearGradient__ :: String -> Nut
linearGradient__ t = linearGradient [] [ DC.text_ t ]

instance TagToDeku "radialGradient" (SVGRadialGradientElement ())

radialGradient
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGRadialGradientElement ())))
  -> Array Nut
  -> Nut
radialGradient = elementify2 (Just "http://www.w3.org/2000/svg") "radialGradient"

radialGradient_ :: Array Nut -> Nut
radialGradient_ = radialGradient []

radialGradient__ :: String -> Nut
radialGradient__ t = radialGradient [] [ DC.text_ t ]

instance TagToDeku "stop" (SVGStopElement ())

stop :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGStopElement ()))) -> Array Nut -> Nut
stop = elementify2 (Just "http://www.w3.org/2000/svg") "stop"

stop_ :: Array Nut -> Nut
stop_ = stop []

stop__ :: String -> Nut
stop__ t = stop [] [ DC.text_ t ]

instance TagToDeku "pattern" (SVGPatternElement ())

pattern
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGPatternElement ()))) -> Array Nut -> Nut
pattern = elementify2 (Just "http://www.w3.org/2000/svg") "pattern"

pattern_ :: Array Nut -> Nut
pattern_ = pattern []

pattern__ :: String -> Nut
pattern__ t = pattern [] [ DC.text_ t ]

instance TagToDeku "script" (SVGScriptElement ())

script
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGScriptElement ()))) -> Array Nut -> Nut
script = elementify2 (Just "http://www.w3.org/2000/svg") "script"

script_ :: Array Nut -> Nut
script_ = script []

script__ :: String -> Nut
script__ t = script [] [ DC.text_ t ]

instance TagToDeku "a" (SVGAElement ())

a :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGAElement ()))) -> Array Nut -> Nut
a = elementify2 (Just "http://www.w3.org/2000/svg") "a"

a_ :: Array Nut -> Nut
a_ = a []

a__ :: String -> Nut
a__ t = a [] [ DC.text_ t ]

instance TagToDeku "view" (SVGViewElement ())

view :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGViewElement ()))) -> Array Nut -> Nut
view = elementify2 (Just "http://www.w3.org/2000/svg") "view"

view_ :: Array Nut -> Nut
view_ = view []

view__ :: String -> Nut
view__ t = view [] [ DC.text_ t ]

instance TagToDeku "animate" (SVGAnimateElement ())

animate
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGAnimateElement ()))) -> Array Nut -> Nut
animate = elementify2 (Just "http://www.w3.org/2000/svg") "animate"

animate_ :: Array Nut -> Nut
animate_ = animate []

animate__ :: String -> Nut
animate__ t = animate [] [ DC.text_ t ]

instance TagToDeku "set" (SVGSetElement ())

set :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGSetElement ()))) -> Array Nut -> Nut
set = elementify2 (Just "http://www.w3.org/2000/svg") "set"

set_ :: Array Nut -> Nut
set_ = set []

set__ :: String -> Nut
set__ t = set [] [ DC.text_ t ]

instance TagToDeku "animateMotion" (SVGAnimateMotionElement ())

animateMotion
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGAnimateMotionElement ())))
  -> Array Nut
  -> Nut
animateMotion = elementify2 (Just "http://www.w3.org/2000/svg") "animateMotion"

animateMotion_ :: Array Nut -> Nut
animateMotion_ = animateMotion []

animateMotion__ :: String -> Nut
animateMotion__ t = animateMotion [] [ DC.text_ t ]

instance TagToDeku "mpath" (SVGMPathElement ())

mpath :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGMPathElement ()))) -> Array Nut -> Nut
mpath = elementify2 (Just "http://www.w3.org/2000/svg") "mpath"

mpath_ :: Array Nut -> Nut
mpath_ = mpath []

mpath__ :: String -> Nut
mpath__ t = mpath [] [ DC.text_ t ]

instance TagToDeku "animateTransform" (SVGAnimateTransformElement ())

animateTransform
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGAnimateTransformElement ())))
  -> Array Nut
  -> Nut
animateTransform = elementify2 (Just "http://www.w3.org/2000/svg") "animateTransform"

animateTransform_ :: Array Nut -> Nut
animateTransform_ = animateTransform []

animateTransform__ :: String -> Nut
animateTransform__ t = animateTransform [] [ DC.text_ t ]

instance TagToDeku "filter" (SVGFilterElement ())

filter
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFilterElement ()))) -> Array Nut -> Nut
filter = elementify2 (Just "http://www.w3.org/2000/svg") "filter"

filter_ :: Array Nut -> Nut
filter_ = filter []

filter__ :: String -> Nut
filter__ t = filter [] [ DC.text_ t ]

instance TagToDeku "feBlend" (SVGFEBlendElement ())

feBlend
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEBlendElement ()))) -> Array Nut -> Nut
feBlend = elementify2 (Just "http://www.w3.org/2000/svg") "feBlend"

feBlend_ :: Array Nut -> Nut
feBlend_ = feBlend []

feBlend__ :: String -> Nut
feBlend__ t = feBlend [] [ DC.text_ t ]

instance TagToDeku "feColorMatrix" (SVGFEColorMatrixElement ())

feColorMatrix
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEColorMatrixElement ())))
  -> Array Nut
  -> Nut
feColorMatrix = elementify2 (Just "http://www.w3.org/2000/svg") "feColorMatrix"

feColorMatrix_ :: Array Nut -> Nut
feColorMatrix_ = feColorMatrix []

feColorMatrix__ :: String -> Nut
feColorMatrix__ t = feColorMatrix [] [ DC.text_ t ]

instance TagToDeku "feComponentTransfer" (SVGFEComponentTransferElement ())

feComponentTransfer
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEComponentTransferElement ())))
  -> Array Nut
  -> Nut
feComponentTransfer = elementify2 (Just "http://www.w3.org/2000/svg") "feComponentTransfer"

feComponentTransfer_ :: Array Nut -> Nut
feComponentTransfer_ = feComponentTransfer []

feComponentTransfer__ :: String -> Nut
feComponentTransfer__ t = feComponentTransfer [] [ DC.text_ t ]

instance TagToDeku "feFuncR" (SVGFEFuncRElement ())

feFuncR
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEFuncRElement ()))) -> Array Nut -> Nut
feFuncR = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncR"

feFuncR_ :: Array Nut -> Nut
feFuncR_ = feFuncR []

feFuncR__ :: String -> Nut
feFuncR__ t = feFuncR [] [ DC.text_ t ]

instance TagToDeku "feFuncG" (SVGFEFuncGElement ())

feFuncG
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEFuncGElement ()))) -> Array Nut -> Nut
feFuncG = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncG"

feFuncG_ :: Array Nut -> Nut
feFuncG_ = feFuncG []

feFuncG__ :: String -> Nut
feFuncG__ t = feFuncG [] [ DC.text_ t ]

instance TagToDeku "feFuncB" (SVGFEFuncBElement ())

feFuncB
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEFuncBElement ()))) -> Array Nut -> Nut
feFuncB = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncB"

feFuncB_ :: Array Nut -> Nut
feFuncB_ = feFuncB []

feFuncB__ :: String -> Nut
feFuncB__ t = feFuncB [] [ DC.text_ t ]

instance TagToDeku "feFuncA" (SVGFEFuncAElement ())

feFuncA
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEFuncAElement ()))) -> Array Nut -> Nut
feFuncA = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncA"

feFuncA_ :: Array Nut -> Nut
feFuncA_ = feFuncA []

feFuncA__ :: String -> Nut
feFuncA__ t = feFuncA [] [ DC.text_ t ]

instance TagToDeku "feComposite" (SVGFECompositeElement ())

feComposite
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFECompositeElement ()))) -> Array Nut -> Nut
feComposite = elementify2 (Just "http://www.w3.org/2000/svg") "feComposite"

feComposite_ :: Array Nut -> Nut
feComposite_ = feComposite []

feComposite__ :: String -> Nut
feComposite__ t = feComposite [] [ DC.text_ t ]

instance TagToDeku "feConvolveMatrix" (SVGFEConvolveMatrixElement ())

feConvolveMatrix
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEConvolveMatrixElement ())))
  -> Array Nut
  -> Nut
feConvolveMatrix = elementify2 (Just "http://www.w3.org/2000/svg") "feConvolveMatrix"

feConvolveMatrix_ :: Array Nut -> Nut
feConvolveMatrix_ = feConvolveMatrix []

feConvolveMatrix__ :: String -> Nut
feConvolveMatrix__ t = feConvolveMatrix [] [ DC.text_ t ]

instance TagToDeku "feDiffuseLighting" (SVGFEDiffuseLightingElement ())

feDiffuseLighting
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEDiffuseLightingElement ())))
  -> Array Nut
  -> Nut
feDiffuseLighting = elementify2 (Just "http://www.w3.org/2000/svg") "feDiffuseLighting"

feDiffuseLighting_ :: Array Nut -> Nut
feDiffuseLighting_ = feDiffuseLighting []

feDiffuseLighting__ :: String -> Nut
feDiffuseLighting__ t = feDiffuseLighting [] [ DC.text_ t ]

instance TagToDeku "feDisplacementMap" (SVGFEDisplacementMapElement ())

feDisplacementMap
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEDisplacementMapElement ())))
  -> Array Nut
  -> Nut
feDisplacementMap = elementify2 (Just "http://www.w3.org/2000/svg") "feDisplacementMap"

feDisplacementMap_ :: Array Nut -> Nut
feDisplacementMap_ = feDisplacementMap []

feDisplacementMap__ :: String -> Nut
feDisplacementMap__ t = feDisplacementMap [] [ DC.text_ t ]

instance TagToDeku "feDropShadow" (SVGFEDropShadowElement ())

feDropShadow
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEDropShadowElement ())))
  -> Array Nut
  -> Nut
feDropShadow = elementify2 (Just "http://www.w3.org/2000/svg") "feDropShadow"

feDropShadow_ :: Array Nut -> Nut
feDropShadow_ = feDropShadow []

feDropShadow__ :: String -> Nut
feDropShadow__ t = feDropShadow [] [ DC.text_ t ]

instance TagToDeku "feFlood" (SVGFEFloodElement ())

feFlood
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEFloodElement ()))) -> Array Nut -> Nut
feFlood = elementify2 (Just "http://www.w3.org/2000/svg") "feFlood"

feFlood_ :: Array Nut -> Nut
feFlood_ = feFlood []

feFlood__ :: String -> Nut
feFlood__ t = feFlood [] [ DC.text_ t ]

instance TagToDeku "feGaussianBlur" (SVGFEGaussianBlurElement ())

feGaussianBlur
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEGaussianBlurElement ())))
  -> Array Nut
  -> Nut
feGaussianBlur = elementify2 (Just "http://www.w3.org/2000/svg") "feGaussianBlur"

feGaussianBlur_ :: Array Nut -> Nut
feGaussianBlur_ = feGaussianBlur []

feGaussianBlur__ :: String -> Nut
feGaussianBlur__ t = feGaussianBlur [] [ DC.text_ t ]

instance TagToDeku "feImage" (SVGFEImageElement ())

feImage
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEImageElement ()))) -> Array Nut -> Nut
feImage = elementify2 (Just "http://www.w3.org/2000/svg") "feImage"

feImage_ :: Array Nut -> Nut
feImage_ = feImage []

feImage__ :: String -> Nut
feImage__ t = feImage [] [ DC.text_ t ]

instance TagToDeku "feMerge" (SVGFEMergeElement ())

feMerge
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEMergeElement ()))) -> Array Nut -> Nut
feMerge = elementify2 (Just "http://www.w3.org/2000/svg") "feMerge"

feMerge_ :: Array Nut -> Nut
feMerge_ = feMerge []

feMerge__ :: String -> Nut
feMerge__ t = feMerge [] [ DC.text_ t ]

instance TagToDeku "feMergeNode" (SVGFEMergeNodeElement ())

feMergeNode
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEMergeNodeElement ()))) -> Array Nut -> Nut
feMergeNode = elementify2 (Just "http://www.w3.org/2000/svg") "feMergeNode"

feMergeNode_ :: Array Nut -> Nut
feMergeNode_ = feMergeNode []

feMergeNode__ :: String -> Nut
feMergeNode__ t = feMergeNode [] [ DC.text_ t ]

instance TagToDeku "feMorphology" (SVGFEMorphologyElement ())

feMorphology
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEMorphologyElement ())))
  -> Array Nut
  -> Nut
feMorphology = elementify2 (Just "http://www.w3.org/2000/svg") "feMorphology"

feMorphology_ :: Array Nut -> Nut
feMorphology_ = feMorphology []

feMorphology__ :: String -> Nut
feMorphology__ t = feMorphology [] [ DC.text_ t ]

instance TagToDeku "feOffset" (SVGFEOffsetElement ())

feOffset
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEOffsetElement ()))) -> Array Nut -> Nut
feOffset = elementify2 (Just "http://www.w3.org/2000/svg") "feOffset"

feOffset_ :: Array Nut -> Nut
feOffset_ = feOffset []

feOffset__ :: String -> Nut
feOffset__ t = feOffset [] [ DC.text_ t ]

instance TagToDeku "feSpecularLighting" (SVGFESpecularLightingElement ())

feSpecularLighting
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFESpecularLightingElement ())))
  -> Array Nut
  -> Nut
feSpecularLighting = elementify2 (Just "http://www.w3.org/2000/svg") "feSpecularLighting"

feSpecularLighting_ :: Array Nut -> Nut
feSpecularLighting_ = feSpecularLighting []

feSpecularLighting__ :: String -> Nut
feSpecularLighting__ t = feSpecularLighting [] [ DC.text_ t ]

instance TagToDeku "feTile" (SVGFETileElement ())

feTile
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFETileElement ()))) -> Array Nut -> Nut
feTile = elementify2 (Just "http://www.w3.org/2000/svg") "feTile"

feTile_ :: Array Nut -> Nut
feTile_ = feTile []

feTile__ :: String -> Nut
feTile__ t = feTile [] [ DC.text_ t ]

instance TagToDeku "feTurbulence" (SVGFETurbulenceElement ())

feTurbulence
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFETurbulenceElement ())))
  -> Array Nut
  -> Nut
feTurbulence = elementify2 (Just "http://www.w3.org/2000/svg") "feTurbulence"

feTurbulence_ :: Array Nut -> Nut
feTurbulence_ = feTurbulence []

feTurbulence__ :: String -> Nut
feTurbulence__ t = feTurbulence [] [ DC.text_ t ]

instance TagToDeku "feDistantLight" (SVGFEDistantLightElement ())

feDistantLight
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEDistantLightElement ())))
  -> Array Nut
  -> Nut
feDistantLight = elementify2 (Just "http://www.w3.org/2000/svg") "feDistantLight"

feDistantLight_ :: Array Nut -> Nut
feDistantLight_ = feDistantLight []

feDistantLight__ :: String -> Nut
feDistantLight__ t = feDistantLight [] [ DC.text_ t ]

instance TagToDeku "fePointLight" (SVGFEPointLightElement ())

fePointLight
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFEPointLightElement ())))
  -> Array Nut
  -> Nut
fePointLight = elementify2 (Just "http://www.w3.org/2000/svg") "fePointLight"

fePointLight_ :: Array Nut -> Nut
fePointLight_ = fePointLight []

fePointLight__ :: String -> Nut
fePointLight__ t = fePointLight [] [ DC.text_ t ]

instance TagToDeku "feSpotLight" (SVGFESpotLightElement ())

feSpotLight
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGFESpotLightElement ()))) -> Array Nut -> Nut
feSpotLight = elementify2 (Just "http://www.w3.org/2000/svg") "feSpotLight"

feSpotLight_ :: Array Nut -> Nut
feSpotLight_ = feSpotLight []

feSpotLight__ :: String -> Nut
feSpotLight__ t = feSpotLight [] [ DC.text_ t ]

instance TagToDeku "clipPath" (SVGClipPathElement ())

clipPath
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGClipPathElement ()))) -> Array Nut -> Nut
clipPath = elementify2 (Just "http://www.w3.org/2000/svg") "clipPath"

clipPath_ :: Array Nut -> Nut
clipPath_ = clipPath []

clipPath__ :: String -> Nut
clipPath__ t = clipPath [] [ DC.text_ t ]

instance TagToDeku "mask" (SVGMaskElement ())

mask :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (SVGMaskElement ()))) -> Array Nut -> Nut
mask = elementify2 (Just "http://www.w3.org/2000/svg") "mask"

mask_ :: Array Nut -> Nut
mask_ = mask []

mask__ :: String -> Nut
mask__ t = mask [] [ DC.text_ t ]
