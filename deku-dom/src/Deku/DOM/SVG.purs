-- | This module contains reexports of all the DOM elements.
-- This module has been automatically generated by running `spago run -p codegen`.
-- Any changes may be overwritten.
module Deku.DOM.SVG
  ( class TagToDeku
  , svg
  , svg_
  , g
  , g_
  , defs
  , defs_
  , symbol
  , symbol_
  , use
  , use_
  , switch
  , switch_
  , title
  , title_
  , desc
  , desc_
  , metadata
  , metadata_
  , style
  , style_
  , path
  , path_
  , rect
  , rect_
  , circle
  , circle_
  , ellipse
  , ellipse_
  , line
  , line_
  , polyline
  , polyline_
  , polygon
  , polygon_
  , text
  , text_
  , tspan
  , tspan_
  , textPath
  , textPath_
  , image
  , image_
  , foreignObject
  , foreignObject_
  , marker
  , marker_
  , linearGradient
  , linearGradient_
  , radialGradient
  , radialGradient_
  , stop
  , stop_
  , pattern
  , pattern_
  , script
  , script_
  , a
  , a_
  , view
  , view_
  , animate
  , animate_
  , set
  , set_
  , animateMotion
  , animateMotion_
  , mpath
  , mpath_
  , animateTransform
  , animateTransform_
  , filter
  , filter_
  , feBlend
  , feBlend_
  , feColorMatrix
  , feColorMatrix_
  , feComponentTransfer
  , feComponentTransfer_
  , feFuncR
  , feFuncR_
  , feFuncG
  , feFuncG_
  , feFuncB
  , feFuncB_
  , feFuncA
  , feFuncA_
  , feComposite
  , feComposite_
  , feConvolveMatrix
  , feConvolveMatrix_
  , feDiffuseLighting
  , feDiffuseLighting_
  , feDisplacementMap
  , feDisplacementMap_
  , feDropShadow
  , feDropShadow_
  , feFlood
  , feFlood_
  , feGaussianBlur
  , feGaussianBlur_
  , feImage
  , feImage_
  , feMerge
  , feMerge_
  , feMergeNode
  , feMergeNode_
  , feMorphology
  , feMorphology_
  , feOffset
  , feOffset_
  , feSpecularLighting
  , feSpecularLighting_
  , feTile
  , feTile_
  , feTurbulence
  , feTurbulence_
  , feDistantLight
  , feDistantLight_
  , fePointLight
  , fePointLight_
  , feSpotLight
  , feSpotLight_
  , clipPath
  , clipPath_
  , mask
  , mask_
  , SVGClipPathElement
  , SVGMaskElement
  , SVGFilterElement
  , SVGFilterPrimitiveStandardAttributes
  , SVGFEBlendElement
  , SVGFEColorMatrixElement
  , SVGFEComponentTransferElement
  , SVGComponentTransferFunctionElement
  , SVGFEFuncRElement
  , SVGFEFuncGElement
  , SVGFEFuncBElement
  , SVGFEFuncAElement
  , SVGFECompositeElement
  , SVGFEConvolveMatrixElement
  , SVGFEDiffuseLightingElement
  , SVGFEDistantLightElement
  , SVGFEPointLightElement
  , SVGFESpotLightElement
  , SVGFEDisplacementMapElement
  , SVGFEDropShadowElement
  , SVGFEFloodElement
  , SVGFEGaussianBlurElement
  , SVGFEImageElement
  , SVGFEMergeElement
  , SVGFEMergeNodeElement
  , SVGFEMorphologyElement
  , SVGFEOffsetElement
  , SVGFESpecularLightingElement
  , SVGFETileElement
  , SVGFETurbulenceElement
  , SVGAnimationElement
  , SVGAnimateElement
  , SVGSetElement
  , SVGAnimateMotionElement
  , SVGMPathElement
  , SVGAnimateTransformElement
  , SVGElement
  , SVGGraphicsElement
  , SVGGeometryElement
  , SVGTests
  , SVGFitToViewBox
  , SVGURIReference
  , SVGSVGElement
  , SVGGElement
  , SVGDefsElement
  , SVGDescElement
  , SVGMetadataElement
  , SVGTitleElement
  , SVGSymbolElement
  , SVGUseElement
  , SVGElementInstance
  , SVGSwitchElement
  , SVGStyleElement
  , SVGPathElement
  , SVGRectElement
  , SVGCircleElement
  , SVGEllipseElement
  , SVGLineElement
  , SVGAnimatedPoints
  , SVGPolylineElement
  , SVGPolygonElement
  , SVGTextContentElement
  , SVGTextPositioningElement
  , SVGTextElement
  , SVGTSpanElement
  , SVGTextPathElement
  , SVGImageElement
  , SVGForeignObjectElement
  , SVGMarkerElement
  , SVGGradientElement
  , SVGLinearGradientElement
  , SVGRadialGradientElement
  , SVGStopElement
  , SVGPatternElement
  , SVGScriptElement
  , SVGAElement
  , SVGViewElement
  , SvgText
  , SvgPresentation
  ) where

import FRP.Event as FRP.Event
import Data.Maybe (Maybe(..))
import Deku.Attribute (Attribute) as Deku.Attribute
import Deku.Control (elementify2)
import Deku.Core (Nut)
import Type.Proxy (Proxy)
import Web.Event.Internal.Types as Web.Event.Internal.Types
import Deku.DOM (Element, GlobalEventHandlers, HTMLOrSVGElement, WindowEventHandlers)

class TagToDeku (tag :: Symbol) (interface :: Row Type) | tag -> interface
type SVGClipPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGClipPathElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  , clipPathUnits :: String
  | SVGElement r
  )

type SVGMaskElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMaskElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFilterElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFilterElement"
  , filterRes :: String
  , height :: String
  , width :: String
  , y :: String
  , x :: String
  , primitiveUnits :: String
  , filterUnits :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGFilterPrimitiveStandardAttributes (r :: Row Type) =
  (__tag :: Proxy "SVGFilterPrimitiveStandardAttributes" | SvgPresentation r)

type SVGFEBlendElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEBlendElement"
  , in2 :: String
  , noComposite :: String
  , mode :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEColorMatrixElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEColorMatrixElement"
  , values :: String
  , xtype :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEComponentTransferElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEComponentTransferElement"
  , offset :: String
  , exponent :: String
  , amplitude :: String
  , intercept :: String
  , slope :: String
  , tableValues :: String
  , xtype :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGComponentTransferFunctionElement (r :: Row Type) =
  (__tag :: Proxy "SVGComponentTransferFunctionElement" | SvgPresentation (SVGElement r))

type SVGFEFuncRElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncRElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncGElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncGElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncBElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncBElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFEFuncAElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEFuncAElement" | SvgPresentation (SVGComponentTransferFunctionElement r))

type SVGFECompositeElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFECompositeElement"
  , in2 :: String
  , k4 :: String
  , k3 :: String
  , k2 :: String
  , k1 :: String
  , operator :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEConvolveMatrixElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEConvolveMatrixElement"
  , preserveAlpha :: String
  , kernelUnitLength :: String
  , edgeMode :: String
  , targetY :: String
  , targetX :: String
  , bias :: String
  , divisor :: String
  , kernelMatrix :: String
  , order :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDiffuseLightingElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDiffuseLightingElement"
  , kernelUnitLength :: String
  , diffuseConstant :: String
  , surfaceScale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDistantLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDistantLightElement"
  , elevation :: String
  , azimuth :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFEPointLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEPointLightElement"
  , z :: String
  , y :: String
  , x :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFESpotLightElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFESpotLightElement"
  , limitingConeAngle :: String
  , specularExponent :: String
  , pointsAtZ :: String
  , pointsAtY :: String
  , pointsAtX :: String
  , z :: String
  , y :: String
  , x :: String
  | SvgPresentation (SVGElement r)
  )

type SVGFEDisplacementMapElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDisplacementMapElement"
  , in2 :: String
  , yChannelSelector :: String
  , xChannelSelector :: String
  , scale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEDropShadowElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEDropShadowElement"
  , stdDeviation :: String
  , dy :: String
  , dx :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEFloodElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEFloodElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEGaussianBlurElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEGaussianBlurElement"
  , edgeMode :: String
  , stdDeviation :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEImageElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEImageElement"
  , crossorigin :: String
  , preserveAspectRatio :: String
  , href :: String
  , xlinkHref :: String
  | SvgPresentation (SVGURIReference (SVGFilterPrimitiveStandardAttributes (SVGElement r)))
  )

type SVGFEMergeElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEMergeElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEMergeNodeElement (r :: Row Type) =
  (__tag :: Proxy "SVGFEMergeNodeElement" | SvgPresentation (SVGElement r))

type SVGFEMorphologyElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEMorphologyElement"
  , radius :: String
  , operator :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFEOffsetElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFEOffsetElement"
  , dy :: String
  , dx :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFESpecularLightingElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFESpecularLightingElement"
  , kernelUnitLength :: String
  , specularExponent :: String
  , specularConstant :: String
  , surfaceScale :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFETileElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFETileElement"
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGFETurbulenceElement (r :: Row Type) =
  ( __tag :: Proxy "SVGFETurbulenceElement"
  , xtype :: String
  , stitchTiles :: String
  , seed :: String
  , numOctaves :: String
  , baseFrequency :: String
  | SvgPresentation (SVGFilterPrimitiveStandardAttributes (SVGElement r))
  )

type SVGAnimationElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimationElement"
  , repeat :: Web.Event.Internal.Types.Event
  , end :: Web.Event.Internal.Types.Event
  , begin :: Web.Event.Internal.Types.Event
  | SvgPresentation (SVGTests (SVGElement r))
  )

type SVGAnimateElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateElement"
  , origin :: String
  , rotate :: String
  , keyPoints :: String
  , accumulate :: String
  , additive :: String
  , from :: String
  , keySplines :: String
  , keyTimes :: String
  , values :: String
  , fill :: String
  , repeatDur :: String
  , repeatCount :: String
  , restart :: String
  , max :: String
  , min :: String
  , end :: String
  , dur :: String
  , begin :: String
  , attributeName :: String
  , href :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , by :: String
  | SVGAnimationElement r
  )

type SVGSetElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSetElement"
  , to :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimationElement r)
  )

type SVGAnimateMotionElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateMotionElement"
  , path :: String
  , calcMode :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SVGAnimateElement (SvgPresentation (SVGAnimationElement r))
  )

type SVGMPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMPathElement"
  , href :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGAnimateTransformElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAnimateTransformElement"
  , xtype :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SVGAnimateElement (SvgPresentation (SVGAnimationElement r))
  )

type SVGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGElement"
  , lightingColor :: String
  , colorInterpolationFilters :: String
  , floodOpacity :: String
  , floodColor :: String
  , filter :: String
  , strokeOpacity :: String
  , stroke :: String
  , strokeRepeat :: String
  , strokeSize :: String
  , strokePosition :: String
  , strokeOrigin :: String
  , strokeImage :: String
  , strokeColor :: String
  , strokeDashJustify :: String
  , strokeDashCorner :: String
  , strokeDashoffset :: String
  , strokeDasharray :: String
  , strokeBreak :: String
  , strokeMiterlimit :: String
  , strokeLinejoin :: String
  , strokeLinecap :: String
  , strokeAlign :: String
  , strokeWidth :: String
  , fillOpacity :: String
  , fill :: String
  , fillRepeat :: String
  , fillSize :: String
  , fillPosition :: String
  , fillOrigin :: String
  , fillImage :: String
  , fillColor :: String
  , fillBreak :: String
  , fillRule :: String
  , pointerEvents :: String
  , imageRendering :: String
  , textRendering :: String
  , shapeRendering :: String
  , colorInterpolation :: String
  , paintOrder :: String
  , marker :: String
  , markerEnd :: String
  , markerMid :: String
  , markerStart :: String
  , textAnchor :: String
  , shapeMargin :: String
  , shapeSubtract :: String
  , shapeInside :: String
  , inlineSize :: String
  , d :: String
  , vectorEffect :: String
  , y :: String
  , x :: String
  , ry :: String
  , rx :: String
  , r :: String
  , cy :: String
  , cx :: String
  | SvgPresentation (HTMLOrSVGElement (SVGElementInstance (GlobalEventHandlers (Element r))))
  )

type SVGGraphicsElement (r :: Row Type) =
  (__tag :: Proxy "SVGGraphicsElement" | SvgPresentation (SVGTests (SVGElement r)))

type SVGGeometryElement (r :: Row Type) =
  (__tag :: Proxy "SVGGeometryElement" | SvgPresentation (SVGGraphicsElement r))

type SVGTests (r :: Row Type) = (__tag :: Proxy "SVGTests" | SvgPresentation r)
type SVGFitToViewBox (r :: Row Type) = (__tag :: Proxy "SVGFitToViewBox" | SvgPresentation r)
type SVGURIReference (r :: Row Type) = (__tag :: Proxy "SVGURIReference" | SvgPresentation r)
type SVGSVGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSVGElement"
  , preserveAspectRatio :: String
  , viewBox :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , height :: String
  , width :: String
  | SvgPresentation (WindowEventHandlers (SVGFitToViewBox (SVGGraphicsElement r)))
  )

type SVGGElement (r :: Row Type) =
  ( __tag :: Proxy "SVGGElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGDefsElement (r :: Row Type) =
  (__tag :: Proxy "SVGDefsElement" | SvgPresentation (SVGGraphicsElement r))

type SVGDescElement (r :: Row Type) =
  (__tag :: Proxy "SVGDescElement" | SvgPresentation (SVGElement r))

type SVGMetadataElement (r :: Row Type) =
  (__tag :: Proxy "SVGMetadataElement" | SvgPresentation (SVGElement r))

type SVGTitleElement (r :: Row Type) =
  (__tag :: Proxy "SVGTitleElement" | SvgPresentation (SVGElement r))

type SVGSymbolElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSymbolElement"
  , refY :: String
  , refX :: String
  | SvgPresentation (SVGFitToViewBox (SVGGraphicsElement r))
  )

type SVGUseElement (r :: Row Type) =
  ( __tag :: Proxy "SVGUseElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  , href :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGElementInstance (r :: Row Type) = (__tag :: Proxy "SVGElementInstance" | SvgPresentation r)
type SVGSwitchElement (r :: Row Type) =
  ( __tag :: Proxy "SVGSwitchElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGStyleElement (r :: Row Type) =
  ( __tag :: Proxy "SVGStyleElement"
  , title :: String
  , media :: String
  , xtype :: String
  | SvgPresentation (SVGElement r)
  )

type SVGPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPathElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGRectElement (r :: Row Type) =
  ( __tag :: Proxy "SVGRectElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGCircleElement (r :: Row Type) =
  ( __tag :: Proxy "SVGCircleElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGEllipseElement (r :: Row Type) =
  ( __tag :: Proxy "SVGEllipseElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGLineElement (r :: Row Type) =
  ( __tag :: Proxy "SVGLineElement"
  , y2 :: String
  , x2 :: String
  , y1 :: String
  , x1 :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGeometryElement r)
  )

type SVGAnimatedPoints (r :: Row Type) =
  (__tag :: Proxy "SVGAnimatedPoints" | SVGAnimateElement (SvgPresentation r))

type SVGPolylineElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPolylineElement"
  , points :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimatedPoints (SVGGeometryElement r))
  )

type SVGPolygonElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPolygonElement"
  , points :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGAnimatedPoints (SVGGeometryElement r))
  )

type SVGTextContentElement (r :: Row Type) =
  (__tag :: Proxy "SVGTextContentElement" | SvgPresentation (SVGGraphicsElement r))

type SVGTextPositioningElement (r :: Row Type) =
  (__tag :: Proxy "SVGTextPositioningElement" | SvgPresentation (SVGTextContentElement r))

type SVGTextElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTextElement"
  , lengthAdjust :: String
  , textLength :: String
  , rotate :: String
  , dy :: String
  , dx :: String
  , y :: String
  , x :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SvgText (SVGTextPositioningElement r))
  )

type SVGTSpanElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTSpanElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGTextPositioningElement r)
  )

type SVGTextPathElement (r :: Row Type) =
  ( __tag :: Proxy "SVGTextPathElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , path :: String
  , side :: String
  , spacing :: String
  , method :: String
  , startOffset :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SvgText (SVGURIReference (SVGTextContentElement r)))
  )

type SVGImageElement (r :: Row Type) =
  ( __tag :: Proxy "SVGImageElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , crossorigin :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGForeignObjectElement (r :: Row Type) =
  ( __tag :: Proxy "SVGForeignObjectElement"
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGGraphicsElement r)
  )

type SVGMarkerElement (r :: Row Type) =
  ( __tag :: Proxy "SVGMarkerElement"
  , orient :: String
  , refY :: String
  , refX :: String
  , markerHeight :: String
  , markerWidth :: String
  , markerUnits :: String
  | SvgPresentation (SVGFitToViewBox (SVGElement r))
  )

type SVGGradientElement (r :: Row Type) =
  (__tag :: Proxy "SVGGradientElement" | SvgPresentation (SVGURIReference (SVGElement r)))

type SVGLinearGradientElement (r :: Row Type) =
  ( __tag :: Proxy "SVGLinearGradientElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , spreadMethod :: String
  , y2 :: String
  , x2 :: String
  , y1 :: String
  , x1 :: String
  , gradientTransform :: String
  , gradientUnits :: String
  | SvgPresentation (SVGGradientElement r)
  )

type SVGRadialGradientElement (r :: Row Type) =
  ( __tag :: Proxy "SVGRadialGradientElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , spreadMethod :: String
  , fr :: String
  , fy :: String
  , fx :: String
  , r :: String
  , cy :: String
  , cx :: String
  , gradientTransform :: String
  , gradientUnits :: String
  | SvgPresentation (SVGGradientElement r)
  )

type SVGStopElement (r :: Row Type) =
  ( __tag :: Proxy "SVGStopElement"
  , stopOpacity :: String
  , stopColor :: String
  , offset :: String
  | SvgPresentation (SVGElement r)
  )

type SVGPatternElement (r :: Row Type) =
  ( __tag :: Proxy "SVGPatternElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , height :: String
  , width :: String
  , y :: String
  , x :: String
  , patternTransform :: String
  , patternContentUnits :: String
  , patternUnits :: String
  | SvgPresentation (SVGURIReference (SVGFitToViewBox (SVGElement r)))
  )

type SVGScriptElement (r :: Row Type) =
  ( __tag :: Proxy "SVGScriptElement"
  , xlinkTitle :: String
  , xlinkHref :: String
  , href :: String
  , xtype :: String
  , crossorigin :: String
  | SvgPresentation (SVGURIReference (SVGElement r))
  )

type SVGAElement (r :: Row Type) =
  ( __tag :: Proxy "SVGAElement"
  , referrerpolicy :: String
  , xtype :: String
  , hreflang :: String
  , rel :: String
  , ping :: String
  , download :: String
  , target :: String
  , href :: String
  , xlinkTitle :: String
  , xlinkHref :: String
  , systemLanguage :: String
  , requiredExtensions :: String
  | SvgPresentation (SVGURIReference (SVGGraphicsElement r))
  )

type SVGViewElement (r :: Row Type) =
  (__tag :: Proxy "SVGViewElement" | SvgPresentation (SVGFitToViewBox (SVGElement r)))

type SvgText (r :: Row Type) =
  ( __tag :: Proxy "SvgText"
  , "alignment-baseline" :: String
  , "baseline-shift" :: String
  , "dominant-baseline" :: String
  , "font-family" :: String
  , "font-size" :: String
  , "font-size-adjust" :: String
  , "font-stretch" :: String
  , "font-style" :: String
  , "font-variant" :: String
  , "font-weight" :: String
  , "letter-spacing" :: String
  , "text-decoration" :: String
  , "word-spacing" :: String
  , "writing-mode" :: String
  , "unicode-bidi" :: String
  | r
  )

type SvgPresentation (r :: Row Type) =
  ( __tag :: Proxy "SvgPresentation"
  , pathLength :: String
  , mask :: String
  , opacity :: String
  , overflow :: String
  , "clip-path" :: String
  , "clip-rule" :: String
  , cursor :: String
  , display :: String
  , transform :: String
  , "transform-origin" :: String
  , visibility :: String
  | r
  )

instance TagToDeku "svg" (SVGSVGElement ())

svg :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGSVGElement ()))) -> Array Nut -> Nut
svg = elementify2 (Just "http://www.w3.org/2000/svg") "svg"

svg_ :: Array Nut -> Nut
svg_ = svg []

instance TagToDeku "g" (SVGGElement ())

g :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGGElement ()))) -> Array Nut -> Nut
g = elementify2 (Just "http://www.w3.org/2000/svg") "g"

g_ :: Array Nut -> Nut
g_ = g []

instance TagToDeku "defs" (SVGDefsElement ())

defs :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGDefsElement ()))) -> Array Nut -> Nut
defs = elementify2 (Just "http://www.w3.org/2000/svg") "defs"

defs_ :: Array Nut -> Nut
defs_ = defs []

instance TagToDeku "symbol" (SVGSymbolElement ())

symbol
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGSymbolElement ()))) -> Array Nut -> Nut
symbol = elementify2 (Just "http://www.w3.org/2000/svg") "symbol"

symbol_ :: Array Nut -> Nut
symbol_ = symbol []

instance TagToDeku "use" (SVGUseElement ())

use :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGUseElement ()))) -> Array Nut -> Nut
use = elementify2 (Just "http://www.w3.org/2000/svg") "use"

use_ :: Array Nut -> Nut
use_ = use []

instance TagToDeku "switch" (SVGSwitchElement ())

switch
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGSwitchElement ()))) -> Array Nut -> Nut
switch = elementify2 (Just "http://www.w3.org/2000/svg") "switch"

switch_ :: Array Nut -> Nut
switch_ = switch []

instance TagToDeku "title" (SVGTitleElement ())

title
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGTitleElement ()))) -> Array Nut -> Nut
title = elementify2 (Just "http://www.w3.org/2000/svg") "title"

title_ :: Array Nut -> Nut
title_ = title []

instance TagToDeku "desc" (SVGDescElement ())

desc :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGDescElement ()))) -> Array Nut -> Nut
desc = elementify2 (Just "http://www.w3.org/2000/svg") "desc"

desc_ :: Array Nut -> Nut
desc_ = desc []

instance TagToDeku "metadata" (SVGMetadataElement ())

metadata
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGMetadataElement ()))) -> Array Nut -> Nut
metadata = elementify2 (Just "http://www.w3.org/2000/svg") "metadata"

metadata_ :: Array Nut -> Nut
metadata_ = metadata []

instance TagToDeku "style" (SVGStyleElement ())

style
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGStyleElement ()))) -> Array Nut -> Nut
style = elementify2 (Just "http://www.w3.org/2000/svg") "style"

style_ :: Array Nut -> Nut
style_ = style []

instance TagToDeku "path" (SVGPathElement ())

path :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGPathElement ()))) -> Array Nut -> Nut
path = elementify2 (Just "http://www.w3.org/2000/svg") "path"

path_ :: Array Nut -> Nut
path_ = path []

instance TagToDeku "rect" (SVGRectElement ())

rect :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGRectElement ()))) -> Array Nut -> Nut
rect = elementify2 (Just "http://www.w3.org/2000/svg") "rect"

rect_ :: Array Nut -> Nut
rect_ = rect []

instance TagToDeku "circle" (SVGCircleElement ())

circle
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGCircleElement ()))) -> Array Nut -> Nut
circle = elementify2 (Just "http://www.w3.org/2000/svg") "circle"

circle_ :: Array Nut -> Nut
circle_ = circle []

instance TagToDeku "ellipse" (SVGEllipseElement ())

ellipse
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGEllipseElement ()))) -> Array Nut -> Nut
ellipse = elementify2 (Just "http://www.w3.org/2000/svg") "ellipse"

ellipse_ :: Array Nut -> Nut
ellipse_ = ellipse []

instance TagToDeku "line" (SVGLineElement ())

line :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGLineElement ()))) -> Array Nut -> Nut
line = elementify2 (Just "http://www.w3.org/2000/svg") "line"

line_ :: Array Nut -> Nut
line_ = line []

instance TagToDeku "polyline" (SVGPolylineElement ())

polyline
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGPolylineElement ()))) -> Array Nut -> Nut
polyline = elementify2 (Just "http://www.w3.org/2000/svg") "polyline"

polyline_ :: Array Nut -> Nut
polyline_ = polyline []

instance TagToDeku "polygon" (SVGPolygonElement ())

polygon
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGPolygonElement ()))) -> Array Nut -> Nut
polygon = elementify2 (Just "http://www.w3.org/2000/svg") "polygon"

polygon_ :: Array Nut -> Nut
polygon_ = polygon []

instance TagToDeku "text" (SVGTextElement ())

text :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGTextElement ()))) -> Array Nut -> Nut
text = elementify2 (Just "http://www.w3.org/2000/svg") "text"

text_ :: Array Nut -> Nut
text_ = text []

instance TagToDeku "tspan" (SVGTSpanElement ())

tspan
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGTSpanElement ()))) -> Array Nut -> Nut
tspan = elementify2 (Just "http://www.w3.org/2000/svg") "tspan"

tspan_ :: Array Nut -> Nut
tspan_ = tspan []

instance TagToDeku "textPath" (SVGTextPathElement ())

textPath
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGTextPathElement ()))) -> Array Nut -> Nut
textPath = elementify2 (Just "http://www.w3.org/2000/svg") "textPath"

textPath_ :: Array Nut -> Nut
textPath_ = textPath []

instance TagToDeku "image" (SVGImageElement ())

image
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGImageElement ()))) -> Array Nut -> Nut
image = elementify2 (Just "http://www.w3.org/2000/svg") "image"

image_ :: Array Nut -> Nut
image_ = image []

instance TagToDeku "foreignObject" (SVGForeignObjectElement ())

foreignObject
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGForeignObjectElement ())))
  -> Array Nut
  -> Nut
foreignObject = elementify2 (Just "http://www.w3.org/2000/svg") "foreignObject"

foreignObject_ :: Array Nut -> Nut
foreignObject_ = foreignObject []

instance TagToDeku "marker" (SVGMarkerElement ())

marker
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGMarkerElement ()))) -> Array Nut -> Nut
marker = elementify2 (Just "http://www.w3.org/2000/svg") "marker"

marker_ :: Array Nut -> Nut
marker_ = marker []

instance TagToDeku "linearGradient" (SVGLinearGradientElement ())

linearGradient
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGLinearGradientElement ())))
  -> Array Nut
  -> Nut
linearGradient = elementify2 (Just "http://www.w3.org/2000/svg") "linearGradient"

linearGradient_ :: Array Nut -> Nut
linearGradient_ = linearGradient []

instance TagToDeku "radialGradient" (SVGRadialGradientElement ())

radialGradient
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGRadialGradientElement ())))
  -> Array Nut
  -> Nut
radialGradient = elementify2 (Just "http://www.w3.org/2000/svg") "radialGradient"

radialGradient_ :: Array Nut -> Nut
radialGradient_ = radialGradient []

instance TagToDeku "stop" (SVGStopElement ())

stop :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGStopElement ()))) -> Array Nut -> Nut
stop = elementify2 (Just "http://www.w3.org/2000/svg") "stop"

stop_ :: Array Nut -> Nut
stop_ = stop []

instance TagToDeku "pattern" (SVGPatternElement ())

pattern
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGPatternElement ()))) -> Array Nut -> Nut
pattern = elementify2 (Just "http://www.w3.org/2000/svg") "pattern"

pattern_ :: Array Nut -> Nut
pattern_ = pattern []

instance TagToDeku "script" (SVGScriptElement ())

script
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGScriptElement ()))) -> Array Nut -> Nut
script = elementify2 (Just "http://www.w3.org/2000/svg") "script"

script_ :: Array Nut -> Nut
script_ = script []

instance TagToDeku "a" (SVGAElement ())

a :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGAElement ()))) -> Array Nut -> Nut
a = elementify2 (Just "http://www.w3.org/2000/svg") "a"

a_ :: Array Nut -> Nut
a_ = a []

instance TagToDeku "view" (SVGViewElement ())

view :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGViewElement ()))) -> Array Nut -> Nut
view = elementify2 (Just "http://www.w3.org/2000/svg") "view"

view_ :: Array Nut -> Nut
view_ = view []

instance TagToDeku "animate" (SVGAnimateElement ())

animate
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGAnimateElement ()))) -> Array Nut -> Nut
animate = elementify2 (Just "http://www.w3.org/2000/svg") "animate"

animate_ :: Array Nut -> Nut
animate_ = animate []

instance TagToDeku "set" (SVGSetElement ())

set :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGSetElement ()))) -> Array Nut -> Nut
set = elementify2 (Just "http://www.w3.org/2000/svg") "set"

set_ :: Array Nut -> Nut
set_ = set []

instance TagToDeku "animateMotion" (SVGAnimateMotionElement ())

animateMotion
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGAnimateMotionElement ())))
  -> Array Nut
  -> Nut
animateMotion = elementify2 (Just "http://www.w3.org/2000/svg") "animateMotion"

animateMotion_ :: Array Nut -> Nut
animateMotion_ = animateMotion []

instance TagToDeku "mpath" (SVGMPathElement ())

mpath
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGMPathElement ()))) -> Array Nut -> Nut
mpath = elementify2 (Just "http://www.w3.org/2000/svg") "mpath"

mpath_ :: Array Nut -> Nut
mpath_ = mpath []

instance TagToDeku "animateTransform" (SVGAnimateTransformElement ())

animateTransform
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGAnimateTransformElement ())))
  -> Array Nut
  -> Nut
animateTransform = elementify2 (Just "http://www.w3.org/2000/svg") "animateTransform"

animateTransform_ :: Array Nut -> Nut
animateTransform_ = animateTransform []

instance TagToDeku "filter" (SVGFilterElement ())

filter
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFilterElement ()))) -> Array Nut -> Nut
filter = elementify2 (Just "http://www.w3.org/2000/svg") "filter"

filter_ :: Array Nut -> Nut
filter_ = filter []

instance TagToDeku "feBlend" (SVGFEBlendElement ())

feBlend
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEBlendElement ()))) -> Array Nut -> Nut
feBlend = elementify2 (Just "http://www.w3.org/2000/svg") "feBlend"

feBlend_ :: Array Nut -> Nut
feBlend_ = feBlend []

instance TagToDeku "feColorMatrix" (SVGFEColorMatrixElement ())

feColorMatrix
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEColorMatrixElement ())))
  -> Array Nut
  -> Nut
feColorMatrix = elementify2 (Just "http://www.w3.org/2000/svg") "feColorMatrix"

feColorMatrix_ :: Array Nut -> Nut
feColorMatrix_ = feColorMatrix []

instance TagToDeku "feComponentTransfer" (SVGFEComponentTransferElement ())

feComponentTransfer
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEComponentTransferElement ())))
  -> Array Nut
  -> Nut
feComponentTransfer = elementify2 (Just "http://www.w3.org/2000/svg") "feComponentTransfer"

feComponentTransfer_ :: Array Nut -> Nut
feComponentTransfer_ = feComponentTransfer []

instance TagToDeku "feFuncR" (SVGFEFuncRElement ())

feFuncR
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEFuncRElement ()))) -> Array Nut -> Nut
feFuncR = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncR"

feFuncR_ :: Array Nut -> Nut
feFuncR_ = feFuncR []

instance TagToDeku "feFuncG" (SVGFEFuncGElement ())

feFuncG
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEFuncGElement ()))) -> Array Nut -> Nut
feFuncG = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncG"

feFuncG_ :: Array Nut -> Nut
feFuncG_ = feFuncG []

instance TagToDeku "feFuncB" (SVGFEFuncBElement ())

feFuncB
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEFuncBElement ()))) -> Array Nut -> Nut
feFuncB = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncB"

feFuncB_ :: Array Nut -> Nut
feFuncB_ = feFuncB []

instance TagToDeku "feFuncA" (SVGFEFuncAElement ())

feFuncA
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEFuncAElement ()))) -> Array Nut -> Nut
feFuncA = elementify2 (Just "http://www.w3.org/2000/svg") "feFuncA"

feFuncA_ :: Array Nut -> Nut
feFuncA_ = feFuncA []

instance TagToDeku "feComposite" (SVGFECompositeElement ())

feComposite
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFECompositeElement ())))
  -> Array Nut
  -> Nut
feComposite = elementify2 (Just "http://www.w3.org/2000/svg") "feComposite"

feComposite_ :: Array Nut -> Nut
feComposite_ = feComposite []

instance TagToDeku "feConvolveMatrix" (SVGFEConvolveMatrixElement ())

feConvolveMatrix
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEConvolveMatrixElement ())))
  -> Array Nut
  -> Nut
feConvolveMatrix = elementify2 (Just "http://www.w3.org/2000/svg") "feConvolveMatrix"

feConvolveMatrix_ :: Array Nut -> Nut
feConvolveMatrix_ = feConvolveMatrix []

instance TagToDeku "feDiffuseLighting" (SVGFEDiffuseLightingElement ())

feDiffuseLighting
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEDiffuseLightingElement ())))
  -> Array Nut
  -> Nut
feDiffuseLighting = elementify2 (Just "http://www.w3.org/2000/svg") "feDiffuseLighting"

feDiffuseLighting_ :: Array Nut -> Nut
feDiffuseLighting_ = feDiffuseLighting []

instance TagToDeku "feDisplacementMap" (SVGFEDisplacementMapElement ())

feDisplacementMap
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEDisplacementMapElement ())))
  -> Array Nut
  -> Nut
feDisplacementMap = elementify2 (Just "http://www.w3.org/2000/svg") "feDisplacementMap"

feDisplacementMap_ :: Array Nut -> Nut
feDisplacementMap_ = feDisplacementMap []

instance TagToDeku "feDropShadow" (SVGFEDropShadowElement ())

feDropShadow
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEDropShadowElement ())))
  -> Array Nut
  -> Nut
feDropShadow = elementify2 (Just "http://www.w3.org/2000/svg") "feDropShadow"

feDropShadow_ :: Array Nut -> Nut
feDropShadow_ = feDropShadow []

instance TagToDeku "feFlood" (SVGFEFloodElement ())

feFlood
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEFloodElement ()))) -> Array Nut -> Nut
feFlood = elementify2 (Just "http://www.w3.org/2000/svg") "feFlood"

feFlood_ :: Array Nut -> Nut
feFlood_ = feFlood []

instance TagToDeku "feGaussianBlur" (SVGFEGaussianBlurElement ())

feGaussianBlur
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEGaussianBlurElement ())))
  -> Array Nut
  -> Nut
feGaussianBlur = elementify2 (Just "http://www.w3.org/2000/svg") "feGaussianBlur"

feGaussianBlur_ :: Array Nut -> Nut
feGaussianBlur_ = feGaussianBlur []

instance TagToDeku "feImage" (SVGFEImageElement ())

feImage
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEImageElement ()))) -> Array Nut -> Nut
feImage = elementify2 (Just "http://www.w3.org/2000/svg") "feImage"

feImage_ :: Array Nut -> Nut
feImage_ = feImage []

instance TagToDeku "feMerge" (SVGFEMergeElement ())

feMerge
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEMergeElement ()))) -> Array Nut -> Nut
feMerge = elementify2 (Just "http://www.w3.org/2000/svg") "feMerge"

feMerge_ :: Array Nut -> Nut
feMerge_ = feMerge []

instance TagToDeku "feMergeNode" (SVGFEMergeNodeElement ())

feMergeNode
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEMergeNodeElement ())))
  -> Array Nut
  -> Nut
feMergeNode = elementify2 (Just "http://www.w3.org/2000/svg") "feMergeNode"

feMergeNode_ :: Array Nut -> Nut
feMergeNode_ = feMergeNode []

instance TagToDeku "feMorphology" (SVGFEMorphologyElement ())

feMorphology
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEMorphologyElement ())))
  -> Array Nut
  -> Nut
feMorphology = elementify2 (Just "http://www.w3.org/2000/svg") "feMorphology"

feMorphology_ :: Array Nut -> Nut
feMorphology_ = feMorphology []

instance TagToDeku "feOffset" (SVGFEOffsetElement ())

feOffset
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEOffsetElement ()))) -> Array Nut -> Nut
feOffset = elementify2 (Just "http://www.w3.org/2000/svg") "feOffset"

feOffset_ :: Array Nut -> Nut
feOffset_ = feOffset []

instance TagToDeku "feSpecularLighting" (SVGFESpecularLightingElement ())

feSpecularLighting
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFESpecularLightingElement ())))
  -> Array Nut
  -> Nut
feSpecularLighting = elementify2 (Just "http://www.w3.org/2000/svg") "feSpecularLighting"

feSpecularLighting_ :: Array Nut -> Nut
feSpecularLighting_ = feSpecularLighting []

instance TagToDeku "feTile" (SVGFETileElement ())

feTile
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFETileElement ()))) -> Array Nut -> Nut
feTile = elementify2 (Just "http://www.w3.org/2000/svg") "feTile"

feTile_ :: Array Nut -> Nut
feTile_ = feTile []

instance TagToDeku "feTurbulence" (SVGFETurbulenceElement ())

feTurbulence
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFETurbulenceElement ())))
  -> Array Nut
  -> Nut
feTurbulence = elementify2 (Just "http://www.w3.org/2000/svg") "feTurbulence"

feTurbulence_ :: Array Nut -> Nut
feTurbulence_ = feTurbulence []

instance TagToDeku "feDistantLight" (SVGFEDistantLightElement ())

feDistantLight
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEDistantLightElement ())))
  -> Array Nut
  -> Nut
feDistantLight = elementify2 (Just "http://www.w3.org/2000/svg") "feDistantLight"

feDistantLight_ :: Array Nut -> Nut
feDistantLight_ = feDistantLight []

instance TagToDeku "fePointLight" (SVGFEPointLightElement ())

fePointLight
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFEPointLightElement ())))
  -> Array Nut
  -> Nut
fePointLight = elementify2 (Just "http://www.w3.org/2000/svg") "fePointLight"

fePointLight_ :: Array Nut -> Nut
fePointLight_ = fePointLight []

instance TagToDeku "feSpotLight" (SVGFESpotLightElement ())

feSpotLight
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGFESpotLightElement ())))
  -> Array Nut
  -> Nut
feSpotLight = elementify2 (Just "http://www.w3.org/2000/svg") "feSpotLight"

feSpotLight_ :: Array Nut -> Nut
feSpotLight_ = feSpotLight []

instance TagToDeku "clipPath" (SVGClipPathElement ())

clipPath
  :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGClipPathElement ()))) -> Array Nut -> Nut
clipPath = elementify2 (Just "http://www.w3.org/2000/svg") "clipPath"

clipPath_ :: Array Nut -> Nut
clipPath_ = clipPath []

instance TagToDeku "mask" (SVGMaskElement ())

mask :: Array (FRP.Event.Event (Deku.Attribute.Attribute (SVGMaskElement ()))) -> Array Nut -> Nut
mask = elementify2 (Just "http://www.w3.org/2000/svg") "mask"

mask_ :: Array Nut -> Nut
mask_ = mask []
