-- | This module contains reexports of all the DOM elements.
-- This module has been automatically generated by running `spago run -p codegen`.
-- Any changes may be overwritten.
module Deku.DOM.MathML
  ( class TagToDeku
  , class TagToCtor
  , ctor
  , math
  , math_
  , math__
  , mtext
  , mtext_
  , mtext__
  , mi
  , mi_
  , mi__
  , mn
  , mn_
  , mn__
  , mo
  , mo_
  , mo__
  , mspace
  , mspace_
  , mspace__
  , ms
  , ms_
  , ms__
  , mrow
  , mrow_
  , mrow__
  , mfrac
  , mfrac_
  , mfrac__
  , msqrt
  , msqrt_
  , msqrt__
  , mroot
  , mroot_
  , mroot__
  , mstyle
  , mstyle_
  , mstyle__
  , merror
  , merror_
  , merror__
  , mpadded
  , mpadded_
  , mpadded__
  , mphantom
  , mphantom_
  , mphantom__
  , msub
  , msub_
  , msub__
  , msup
  , msup_
  , msup__
  , msubsup
  , msubsup_
  , msubsup__
  , munder
  , munder_
  , munder__
  , mover
  , mover_
  , mover__
  , munderover
  , munderover_
  , munderover__
  , mmultiscripts
  , mmultiscripts_
  , mmultiscripts__
  , mprescripts
  , mprescripts_
  , mprescripts__
  , mtable
  , mtable_
  , mtable__
  , mtr
  , mtr_
  , mtr__
  , mtd
  , mtd_
  , mtd__
  , maction
  , maction_
  , maction__
  , semantics
  , semantics_
  , semantics__
  , annotation
  , annotation_
  , annotation__
  , annotationXml
  , annotationXml_
  , annotationXml__
  , MathMLElement
  ) where

import FRP.Poll as FRP.Poll
import Data.Maybe (Maybe(..))
import Deku.Attribute (Attribute) as Deku.Attribute
import Deku.Control (elementify)
import Deku.Control as DC
import Deku.Core (Nut)
import Type.Proxy (Proxy)
import Deku.DOM (Element, GlobalEventHandlers, HTMLOrSVGElement)

class TagToDeku (tag :: Symbol) (interface :: Row Type) | tag -> interface
class TagToCtor (tag :: Symbol) (interface :: Row Type) | tag -> interface where
  ctor
    :: Proxy tag -> Array (FRP.Poll.Poll (Deku.Attribute.Attribute interface)) -> Array Nut -> Nut

type MathMLElement (r :: Row Type) =
  ( __tag :: Proxy "MathMLElement"
  , encoding :: String
  , selection :: String
  , actiontype :: String
  , accentunder :: String
  , accent :: String
  , voffset :: String
  , lspace :: String
  , depth :: String
  , height :: String
  , width :: String
  , linethickness :: String
  , maxsize :: String
  , minsize :: String
  , rspace :: String
  , movablelimits :: String
  , largeop :: String
  , symmetric :: String
  , stretchy :: String
  , form :: String
  , separator :: String
  , fence :: String
  , alttext :: String
  , display :: String
  | HTMLOrSVGElement (GlobalEventHandlers (Element r))
  )

instance TagToDeku "math" (MathMLElement ())

math :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
math = elementify (Just "http://www.w3.org/1998/Math/MathML") "math"

instance TagToCtor "math" (MathMLElement ()) where
  ctor _ = math

math_ :: Array Nut -> Nut
math_ = math []

math__ :: String -> Nut
math__ t = math [] [ DC.text_ t ]

instance TagToDeku "mtext" (MathMLElement ())

mtext :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mtext = elementify (Just "http://www.w3.org/1998/Math/MathML") "mtext"

instance TagToCtor "mtext" (MathMLElement ()) where
  ctor _ = mtext

mtext_ :: Array Nut -> Nut
mtext_ = mtext []

mtext__ :: String -> Nut
mtext__ t = mtext [] [ DC.text_ t ]

instance TagToDeku "mi" (MathMLElement ())

mi :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mi = elementify (Just "http://www.w3.org/1998/Math/MathML") "mi"

instance TagToCtor "mi" (MathMLElement ()) where
  ctor _ = mi

mi_ :: Array Nut -> Nut
mi_ = mi []

mi__ :: String -> Nut
mi__ t = mi [] [ DC.text_ t ]

instance TagToDeku "mn" (MathMLElement ())

mn :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mn = elementify (Just "http://www.w3.org/1998/Math/MathML") "mn"

instance TagToCtor "mn" (MathMLElement ()) where
  ctor _ = mn

mn_ :: Array Nut -> Nut
mn_ = mn []

mn__ :: String -> Nut
mn__ t = mn [] [ DC.text_ t ]

instance TagToDeku "mo" (MathMLElement ())

mo :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mo = elementify (Just "http://www.w3.org/1998/Math/MathML") "mo"

instance TagToCtor "mo" (MathMLElement ()) where
  ctor _ = mo

mo_ :: Array Nut -> Nut
mo_ = mo []

mo__ :: String -> Nut
mo__ t = mo [] [ DC.text_ t ]

instance TagToDeku "mspace" (MathMLElement ())

mspace :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mspace = elementify (Just "http://www.w3.org/1998/Math/MathML") "mspace"

instance TagToCtor "mspace" (MathMLElement ()) where
  ctor _ = mspace

mspace_ :: Array Nut -> Nut
mspace_ = mspace []

mspace__ :: String -> Nut
mspace__ t = mspace [] [ DC.text_ t ]

instance TagToDeku "ms" (MathMLElement ())

ms :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
ms = elementify (Just "http://www.w3.org/1998/Math/MathML") "ms"

instance TagToCtor "ms" (MathMLElement ()) where
  ctor _ = ms

ms_ :: Array Nut -> Nut
ms_ = ms []

ms__ :: String -> Nut
ms__ t = ms [] [ DC.text_ t ]

instance TagToDeku "mrow" (MathMLElement ())

mrow :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mrow = elementify (Just "http://www.w3.org/1998/Math/MathML") "mrow"

instance TagToCtor "mrow" (MathMLElement ()) where
  ctor _ = mrow

mrow_ :: Array Nut -> Nut
mrow_ = mrow []

mrow__ :: String -> Nut
mrow__ t = mrow [] [ DC.text_ t ]

instance TagToDeku "mfrac" (MathMLElement ())

mfrac :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mfrac = elementify (Just "http://www.w3.org/1998/Math/MathML") "mfrac"

instance TagToCtor "mfrac" (MathMLElement ()) where
  ctor _ = mfrac

mfrac_ :: Array Nut -> Nut
mfrac_ = mfrac []

mfrac__ :: String -> Nut
mfrac__ t = mfrac [] [ DC.text_ t ]

instance TagToDeku "msqrt" (MathMLElement ())

msqrt :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
msqrt = elementify (Just "http://www.w3.org/1998/Math/MathML") "msqrt"

instance TagToCtor "msqrt" (MathMLElement ()) where
  ctor _ = msqrt

msqrt_ :: Array Nut -> Nut
msqrt_ = msqrt []

msqrt__ :: String -> Nut
msqrt__ t = msqrt [] [ DC.text_ t ]

instance TagToDeku "mroot" (MathMLElement ())

mroot :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mroot = elementify (Just "http://www.w3.org/1998/Math/MathML") "mroot"

instance TagToCtor "mroot" (MathMLElement ()) where
  ctor _ = mroot

mroot_ :: Array Nut -> Nut
mroot_ = mroot []

mroot__ :: String -> Nut
mroot__ t = mroot [] [ DC.text_ t ]

instance TagToDeku "mstyle" (MathMLElement ())

mstyle :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mstyle = elementify (Just "http://www.w3.org/1998/Math/MathML") "mstyle"

instance TagToCtor "mstyle" (MathMLElement ()) where
  ctor _ = mstyle

mstyle_ :: Array Nut -> Nut
mstyle_ = mstyle []

mstyle__ :: String -> Nut
mstyle__ t = mstyle [] [ DC.text_ t ]

instance TagToDeku "merror" (MathMLElement ())

merror :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
merror = elementify (Just "http://www.w3.org/1998/Math/MathML") "merror"

instance TagToCtor "merror" (MathMLElement ()) where
  ctor _ = merror

merror_ :: Array Nut -> Nut
merror_ = merror []

merror__ :: String -> Nut
merror__ t = merror [] [ DC.text_ t ]

instance TagToDeku "mpadded" (MathMLElement ())

mpadded :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mpadded = elementify (Just "http://www.w3.org/1998/Math/MathML") "mpadded"

instance TagToCtor "mpadded" (MathMLElement ()) where
  ctor _ = mpadded

mpadded_ :: Array Nut -> Nut
mpadded_ = mpadded []

mpadded__ :: String -> Nut
mpadded__ t = mpadded [] [ DC.text_ t ]

instance TagToDeku "mphantom" (MathMLElement ())

mphantom :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mphantom = elementify (Just "http://www.w3.org/1998/Math/MathML") "mphantom"

instance TagToCtor "mphantom" (MathMLElement ()) where
  ctor _ = mphantom

mphantom_ :: Array Nut -> Nut
mphantom_ = mphantom []

mphantom__ :: String -> Nut
mphantom__ t = mphantom [] [ DC.text_ t ]

instance TagToDeku "msub" (MathMLElement ())

msub :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
msub = elementify (Just "http://www.w3.org/1998/Math/MathML") "msub"

instance TagToCtor "msub" (MathMLElement ()) where
  ctor _ = msub

msub_ :: Array Nut -> Nut
msub_ = msub []

msub__ :: String -> Nut
msub__ t = msub [] [ DC.text_ t ]

instance TagToDeku "msup" (MathMLElement ())

msup :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
msup = elementify (Just "http://www.w3.org/1998/Math/MathML") "msup"

instance TagToCtor "msup" (MathMLElement ()) where
  ctor _ = msup

msup_ :: Array Nut -> Nut
msup_ = msup []

msup__ :: String -> Nut
msup__ t = msup [] [ DC.text_ t ]

instance TagToDeku "msubsup" (MathMLElement ())

msubsup :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
msubsup = elementify (Just "http://www.w3.org/1998/Math/MathML") "msubsup"

instance TagToCtor "msubsup" (MathMLElement ()) where
  ctor _ = msubsup

msubsup_ :: Array Nut -> Nut
msubsup_ = msubsup []

msubsup__ :: String -> Nut
msubsup__ t = msubsup [] [ DC.text_ t ]

instance TagToDeku "munder" (MathMLElement ())

munder :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
munder = elementify (Just "http://www.w3.org/1998/Math/MathML") "munder"

instance TagToCtor "munder" (MathMLElement ()) where
  ctor _ = munder

munder_ :: Array Nut -> Nut
munder_ = munder []

munder__ :: String -> Nut
munder__ t = munder [] [ DC.text_ t ]

instance TagToDeku "mover" (MathMLElement ())

mover :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mover = elementify (Just "http://www.w3.org/1998/Math/MathML") "mover"

instance TagToCtor "mover" (MathMLElement ()) where
  ctor _ = mover

mover_ :: Array Nut -> Nut
mover_ = mover []

mover__ :: String -> Nut
mover__ t = mover [] [ DC.text_ t ]

instance TagToDeku "munderover" (MathMLElement ())

munderover
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
munderover = elementify (Just "http://www.w3.org/1998/Math/MathML") "munderover"

instance TagToCtor "munderover" (MathMLElement ()) where
  ctor _ = munderover

munderover_ :: Array Nut -> Nut
munderover_ = munderover []

munderover__ :: String -> Nut
munderover__ t = munderover [] [ DC.text_ t ]

instance TagToDeku "mmultiscripts" (MathMLElement ())

mmultiscripts
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mmultiscripts = elementify (Just "http://www.w3.org/1998/Math/MathML") "mmultiscripts"

instance TagToCtor "mmultiscripts" (MathMLElement ()) where
  ctor _ = mmultiscripts

mmultiscripts_ :: Array Nut -> Nut
mmultiscripts_ = mmultiscripts []

mmultiscripts__ :: String -> Nut
mmultiscripts__ t = mmultiscripts [] [ DC.text_ t ]

instance TagToDeku "mprescripts" (MathMLElement ())

mprescripts
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mprescripts = elementify (Just "http://www.w3.org/1998/Math/MathML") "mprescripts"

instance TagToCtor "mprescripts" (MathMLElement ()) where
  ctor _ = mprescripts

mprescripts_ :: Array Nut -> Nut
mprescripts_ = mprescripts []

mprescripts__ :: String -> Nut
mprescripts__ t = mprescripts [] [ DC.text_ t ]

instance TagToDeku "mtable" (MathMLElement ())

mtable :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mtable = elementify (Just "http://www.w3.org/1998/Math/MathML") "mtable"

instance TagToCtor "mtable" (MathMLElement ()) where
  ctor _ = mtable

mtable_ :: Array Nut -> Nut
mtable_ = mtable []

mtable__ :: String -> Nut
mtable__ t = mtable [] [ DC.text_ t ]

instance TagToDeku "mtr" (MathMLElement ())

mtr :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mtr = elementify (Just "http://www.w3.org/1998/Math/MathML") "mtr"

instance TagToCtor "mtr" (MathMLElement ()) where
  ctor _ = mtr

mtr_ :: Array Nut -> Nut
mtr_ = mtr []

mtr__ :: String -> Nut
mtr__ t = mtr [] [ DC.text_ t ]

instance TagToDeku "mtd" (MathMLElement ())

mtd :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
mtd = elementify (Just "http://www.w3.org/1998/Math/MathML") "mtd"

instance TagToCtor "mtd" (MathMLElement ()) where
  ctor _ = mtd

mtd_ :: Array Nut -> Nut
mtd_ = mtd []

mtd__ :: String -> Nut
mtd__ t = mtd [] [ DC.text_ t ]

instance TagToDeku "maction" (MathMLElement ())

maction :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
maction = elementify (Just "http://www.w3.org/1998/Math/MathML") "maction"

instance TagToCtor "maction" (MathMLElement ()) where
  ctor _ = maction

maction_ :: Array Nut -> Nut
maction_ = maction []

maction__ :: String -> Nut
maction__ t = maction [] [ DC.text_ t ]

instance TagToDeku "semantics" (MathMLElement ())

semantics
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
semantics = elementify (Just "http://www.w3.org/1998/Math/MathML") "semantics"

instance TagToCtor "semantics" (MathMLElement ()) where
  ctor _ = semantics

semantics_ :: Array Nut -> Nut
semantics_ = semantics []

semantics__ :: String -> Nut
semantics__ t = semantics [] [ DC.text_ t ]

instance TagToDeku "annotation" (MathMLElement ())

annotation
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
annotation = elementify (Just "http://www.w3.org/1998/Math/MathML") "annotation"

instance TagToCtor "annotation" (MathMLElement ()) where
  ctor _ = annotation

annotation_ :: Array Nut -> Nut
annotation_ = annotation []

annotation__ :: String -> Nut
annotation__ t = annotation [] [ DC.text_ t ]

instance TagToDeku "annotation-xml" (MathMLElement ())

annotationXml
  :: Array (FRP.Poll.Poll (Deku.Attribute.Attribute (MathMLElement ()))) -> Array Nut -> Nut
annotationXml = elementify (Just "http://www.w3.org/1998/Math/MathML") "annotation-xml"

instance TagToCtor "annotation-xml" (MathMLElement ()) where
  ctor _ = annotationXml

annotationXml_ :: Array Nut -> Nut
annotationXml_ = annotationXml []

annotationXml__ :: String -> Nut
annotationXml__ t = annotationXml [] [ DC.text_ t ]
