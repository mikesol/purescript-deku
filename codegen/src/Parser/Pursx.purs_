module Deku.PursxParser where

import Prim.Boolean (False, True)
import Deku.PxTypes as PxTypes
import Prim.Row as Row
import Prim.RowList as RL
import Prim.Symbol as Sym

class DoVerbForAttr (verb :: Symbol) (tag :: Symbol) (acc :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type) (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (newTail :: Symbol) | verb acc head tail onezero pursi pathi -> purso patho newTail
instance (Row.Cons acc PxTypes.PxAtt pursi purso, Row.Cons acc onezero pathi patho) => DoVerbForAttr verb tag acc verb tail onezero pursi pathi purso patho tail
else instance (Sym.Append acc anything acc2, Sym.Cons x y tail, DoVerbForAttr verb tag acc2 x y onezero pursi pathi purso patho newTail) => DoVerbForAttr verb tag acc anything tail onezero pursi pathi purso patho newTail
--
class DoVerbForDOM (verb :: Symbol) (acc :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type) (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (newTail :: Symbol) |  verb acc head tail onezero pursi pathi -> purso patho newTail
instance (Row.Cons acc PxTypes.PxNut pursi purso, Row.Cons acc onezero pathi patho) => DoVerbForDOM  verb acc verb tail onezero pursi pathi purso patho tail
else instance (Sym.Append acc anything acc2, Sym.Cons x y tail, DoVerbForDOM  verb acc2 x y onezero pursi pathi purso patho newTail) => DoVerbForDOM  verb acc anything tail onezero pursi pathi purso patho newTail
--
class IsWhiteSpace (space :: Symbol)
instance IsWhiteSpace ""
else instance (Sym.Cons x y s, IsSingleWhiteSpace x, IsWhiteSpace y) => IsWhiteSpace s
class IsSingleWhiteSpace (s :: Symbol)

class PXStart (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (purs :: Row Type) (path :: Row (RL.RowList Symbol)) |  verb head tail -> purs path
instance
  ( Sym.Cons x y tail
  , PXTagPreName  verb x y RL.Nil () () purso patho trailing
  , IsWhiteSpace trailing
  ) => PXStart  verb "<" tail purso patho

--
class PXTagPreName (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb head tail onezero pursi pathi -> purso patho trailing
--
class PXTagName (verb :: Symbol) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb tag head tail onezero pursi pathi -> purso patho trailing
instance (Sym.Cons q r tail, PXBody  verb q r (RL.Cons "0" "0" onezero) pursi pathi purso patho trailing, Sym.Cons x y trailing, PreEndTagFromTrailing x y tag newTrailing) => PXTagName  verb tag ">" tail onezero pursi pathi purso patho newTrailing
--
class PreEndTagFromTrailing (head :: Symbol) (tail :: Symbol) (tag :: Symbol) (newTrailing :: Symbol) | head tail -> tag newTrailing
--
class EndTagFromTrailing (head :: Symbol) (tail :: Symbol) (tagAcc :: Symbol) (tag :: Symbol) (newTrailing :: Symbol) | head tail tagAcc -> tag newTrailing
--
instance EndTagFromTrailing ">" tail tag tag tail
--
class PXTagPreAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb hasAttributed tag head tail onezero pursi pathi -> purso patho trailing
--
class PXTagAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb hasAttributed tag head tail onezero pursi pathi -> purso patho trailing
instance (Sym.Cons x y tail, PXTagPreAttrValue  verb hasAttributed tag x y onezero pursi pathi purso patho trailing) => PXTagAttrName  verb hasAttributed tag "=" tail onezero pursi pathi purso patho trailing
--
class PXTagPostAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb hasAttributed tag head tail onezero pursi pathi -> purso patho trailing
instance (Sym.Cons x y tail, PXTagPreAttrValue  verb hasAttributed tag x y onezero pursi pathi purso patho trailing) => PXTagPostAttrName  verb hasAttributed tag "=" tail onezero pursi pathi purso patho trailing
--
class PXTagPreAttrValue (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb hasAttributed tag head tail onezero pursi pathi -> purso patho trailing
instance (Sym.Cons x y tail, PXTagAttrValue  verb hasAttributed tag x y onezero pursi pathi purso patho trailing) => PXTagPreAttrValue  verb hasAttributed tag "\"" tail onezero pursi pathi purso patho trailing
--
class PXTagAttrValue (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb hasAttributed tag head tail onezero pursi pathi -> purso patho trailing

instance (Sym.Cons x y tail, PXTagPreAttrName  verb hasAttributed tag x y onezero pursi pathi purso patho trailing) => PXTagAttrValue  verb hasAttributed tag "\"" tail onezero pursi pathi purso patho trailing
class PXBody (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb tail onezero pursi pathi -> purso patho trailing


class CommendEndCandidate2 (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance CommendEndCandidate2 ">" tail tail
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => CommendEndCandidate2 anything tail trailing
class CommendEndCandidate1 (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance (Sym.Cons x y tail, CommendEndCandidate2 x y trailing) => CommendEndCandidate1 "-" tail trailing
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => CommendEndCandidate1 anything tail trailing
class SkipUntilCommentEnd (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance (Sym.Cons x y tail, CommendEndCandidate1 x y trailing)  => SkipUntilCommentEnd "-" tail trailing
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => SkipUntilCommentEnd anything tail trailing
class CloseOrRepeat (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (onezero :: RL.RowList Symbol) (pursi :: Row Type)  (pathi :: Row (RL.RowList Symbol)) (purso :: Row Type) (patho :: Row (RL.RowList Symbol)) (trailing :: Symbol) |  verb head tail onezero pursi pathi -> purso patho trailing
instance CloseOrRepeat  verb "/" tail onezero purs path purs path tail
else instance
  ( Sym.Cons "-" y tail
  , Sym.Cons "-" yy y
  , Sym.Cons x yyy yy
  , SkipUntilCommentEnd x yyy trailing
  , Sym.Cons mm bb trailing
  , PXBody  verb mm bb onezero pursi pathi purso patho newTrailing
  ) =>
  CloseOrRepeat  verb "!" tail onezero pursi pathi purso patho newTrailing
else instance (PXTagPreName  verb anything tail onezero () () pursm pathm trailing, Row.Union pursi pursm pursz, Row.Union pathi pathm pathz, Sym.Cons x y trailing, PXBody  verb x y (RL.Cons "1" "1" onezero) pursz pathz purso patho newTrailing) => CloseOrRepeat  verb anything tail onezero pursi pathi purso patho newTrailing
instance (Sym.Cons x y tail, CloseOrRepeat  verb x y onezero pursi pathi purso patho trailing) => PXBody  verb "<" tail onezero pursi pathi purso patho trailing
else instance (Sym.Cons x y tail, DoVerbForDOM  verb "" x y onezero pursi pathi pursx pathx newTail, Sym.Cons xx yy newTail, PXBody  verb xx yy onezero pursx pathx purso patho trailing) => PXBody  verb verb tail onezero pursi pathi purso patho trailing
else instance (Sym.Cons x y tail, PXBody  verb x y onezero pursi pathi purso patho trailing) => PXBody  verb anything tail onezero pursi pathi purso patho trailing
