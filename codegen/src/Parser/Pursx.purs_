module Deku.PursxParser where

import Deku.DOM (class TagToDeku)
import Deku.PxTypes as PxTypes
import Prim.Boolean (False, True)
import Prim.Row as Row
import Prim.Symbol as Sym
import Type.Proxy (Proxy(..))

pursx :: forall s. Proxy s
pursx = Proxy

class DoVerbForAttr (verb :: Symbol) (tag :: Symbol) (acc :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (newTail :: Symbol) | verb acc head tail pursi -> purso newTail
instance (TagToDeku tag deku,  Row.Cons acc (PxTypes.PxAtt deku) pursi purso) => DoVerbForAttr verb tag acc verb tail pursi purso tail
else instance (Sym.Append acc anything acc2, Sym.Cons x y tail, DoVerbForAttr verb tag acc2 x y pursi purso newTail) => DoVerbForAttr verb tag acc anything tail pursi purso newTail
--
class DoVerbForDOM (verb :: Symbol) (acc :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (newTail :: Symbol) |  verb acc head tail pursi -> purso newTail
instance (Row.Cons acc PxTypes.PxNut pursi purso) => DoVerbForDOM  verb acc verb tail pursi purso tail
else instance (Sym.Append acc anything acc2, Sym.Cons x y tail, DoVerbForDOM  verb acc2 x y pursi purso newTail) => DoVerbForDOM  verb acc anything tail pursi purso newTail
--
class IsWhiteSpace (space :: Symbol)
instance IsWhiteSpace ""
else instance (Sym.Cons x y s, IsSingleWhiteSpace x, IsWhiteSpace y) => IsWhiteSpace s
class IsSingleWhiteSpace (s :: Symbol)

class PXStart (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (purs :: Row Type) |  verb head tail -> purs
instance
  ( Sym.Cons x y tail
  , PXTagPreName  verb x y () purso trailing
  , IsWhiteSpace trailing
  ) => PXStart  verb "<" tail purso

--
class PXTagPreName (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb head tail pursi -> purso trailing
--
class PXTagName (verb :: Symbol) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb tag head tail pursi -> purso trailing
instance (Sym.Cons q r tail, PXBody  verb q r pursi purso trailing, Sym.Cons x y trailing, PreEndTagFromTrailing x y tag newTrailing) => PXTagName  verb tag ">" tail pursi purso newTrailing
--
class PreEndTagFromTrailing (head :: Symbol) (tail :: Symbol) (tag :: Symbol) (newTrailing :: Symbol) | head tail -> tag newTrailing
--
class EndTagFromTrailing (head :: Symbol) (tail :: Symbol) (tagAcc :: Symbol) (tag :: Symbol) (newTrailing :: Symbol) | head tail tagAcc -> tag newTrailing
--
instance EndTagFromTrailing ">" tail tag tag tail
--
class PXTagPreAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb hasAttributed tag head tail pursi -> purso trailing
--
class PXTagAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb hasAttributed tag head tail pursi -> purso trailing
instance (Sym.Cons x y tail, PXTagPreAttrValue  verb hasAttributed tag x y pursi purso trailing) => PXTagAttrName  verb hasAttributed tag "=" tail pursi purso trailing
--
class PXTagPostAttrName (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb hasAttributed tag head tail pursi -> purso trailing
instance (Sym.Cons x y tail, PXTagPreAttrValue  verb hasAttributed tag x y pursi purso trailing) => PXTagPostAttrName  verb hasAttributed tag "=" tail pursi purso trailing
--
class PXTagPreAttrValue (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb hasAttributed tag head tail pursi -> purso trailing
instance (Sym.Cons x y tail, PXTagAttrValue  verb hasAttributed tag x y pursi purso trailing) => PXTagPreAttrValue  verb hasAttributed tag "\"" tail pursi purso trailing
--
class PXTagAttrValue (verb :: Symbol) (hasAttributed :: Boolean) (tag :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb hasAttributed tag head tail pursi -> purso trailing

instance (Sym.Cons x y tail, PXTagPreAttrName  verb hasAttributed tag x y pursi purso trailing) => PXTagAttrValue  verb hasAttributed tag "\"" tail pursi purso trailing
class PXBody (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb tail pursi -> purso trailing


class CommendEndCandidate2 (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance CommendEndCandidate2 ">" tail tail
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => CommendEndCandidate2 anything tail trailing
class CommendEndCandidate1 (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance (Sym.Cons x y tail, CommendEndCandidate2 x y trailing) => CommendEndCandidate1 "-" tail trailing
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => CommendEndCandidate1 anything tail trailing
class SkipUntilCommentEnd (head :: Symbol) (tail :: Symbol) (trailing :: Symbol) | head tail -> trailing
instance (Sym.Cons x y tail, CommendEndCandidate1 x y trailing)  => SkipUntilCommentEnd "-" tail trailing
else instance (Sym.Cons x y tail, SkipUntilCommentEnd x y trailing) => SkipUntilCommentEnd anything tail trailing
class CloseOrRepeat (verb :: Symbol) (head :: Symbol) (tail :: Symbol) (pursi :: Row Type) (purso :: Row Type) (trailing :: Symbol) |  verb head tail pursi -> purso trailing
instance CloseOrRepeat  verb "/" tail purs purs tail
else instance
  ( Sym.Cons "-" y tail
  , Sym.Cons "-" yy y
  , Sym.Cons x yyy yy
  , SkipUntilCommentEnd x yyy trailing
  , Sym.Cons mm bb trailing
  , PXBody  verb mm bb pursi purso newTrailing
  ) =>
  CloseOrRepeat  verb "!" tail pursi purso newTrailing
else instance (PXTagPreName  verb anything tail () pursm trailing, Row.Union pursi pursm pursz, Sym.Cons x y trailing, PXBody  verb x y pursz purso newTrailing) => CloseOrRepeat  verb anything tail pursi purso newTrailing
instance (Sym.Cons x y tail, CloseOrRepeat  verb x y pursi purso trailing) => PXBody  verb "<" tail pursi purso trailing
else instance (Sym.Cons x y tail, DoVerbForDOM  verb "" x y pursi pursx newTail, Sym.Cons xx yy newTail, PXBody  verb xx yy pursx purso trailing) => PXBody  verb verb tail pursi purso trailing
else instance (Sym.Cons x y tail, PXBody  verb x y pursi purso trailing) => PXBody  verb anything tail pursi purso trailing
